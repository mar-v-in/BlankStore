// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Asset.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class AssetsRequestProto extends Message {

  public static final Integer DEFAULT_ASSETTYPE = 0;
  public static final String DEFAULT_QUERY = "";
  public static final String DEFAULT_CATEGORYID = "";
  public static final List<String> DEFAULT_ASSETID = Collections.emptyList();
  public static final Boolean DEFAULT_RETRIEVEVENDINGHISTORY = false;
  public static final Boolean DEFAULT_RETRIEVEEXTENDEDINFO = false;
  public static final Integer DEFAULT_SORTORDER = 0;
  public static final Long DEFAULT_STARTINDEX = 0L;
  public static final Long DEFAULT_NUMENTRIES = 0L;
  public static final Integer DEFAULT_VIEWFILTER = 0;
  public static final String DEFAULT_RANKINGTYPE = "";
  public static final Boolean DEFAULT_RETRIEVECARRIERCHANNEL = false;
  public static final List<String> DEFAULT_PENDINGDOWNLOADASSETID = Collections.emptyList();
  public static final Boolean DEFAULT_RECONSTRUCTVENDINGHISTORY = false;
  public static final Boolean DEFAULT_UNFILTEREDRESULTS = false;
  public static final List<String> DEFAULT_BADGEID = Collections.emptyList();

  @ProtoField(tag = 1, type = INT32)
  public final Integer assetType;

  @ProtoField(tag = 2, type = STRING)
  public final String query;

  @ProtoField(tag = 3, type = STRING)
  public final String categoryId;

  @ProtoField(tag = 4, type = STRING, label = REPEATED)
  public final List<String> assetId;

  @ProtoField(tag = 5, type = BOOL)
  public final Boolean retrieveVendingHistory;

  @ProtoField(tag = 6, type = BOOL)
  public final Boolean retrieveExtendedInfo;

  @ProtoField(tag = 7, type = INT32)
  public final Integer sortOrder;

  @ProtoField(tag = 8, type = INT64)
  public final Long startIndex;

  @ProtoField(tag = 9, type = INT64)
  public final Long numEntries;

  @ProtoField(tag = 10, type = INT32)
  public final Integer viewFilter;

  @ProtoField(tag = 11, type = STRING)
  public final String rankingType;

  @ProtoField(tag = 12, type = BOOL)
  public final Boolean retrieveCarrierChannel;

  @ProtoField(tag = 13, type = STRING, label = REPEATED)
  public final List<String> pendingDownloadAssetId;

  @ProtoField(tag = 14, type = BOOL)
  public final Boolean reconstructVendingHistory;

  @ProtoField(tag = 15, type = BOOL)
  public final Boolean unfilteredResults;

  @ProtoField(tag = 16, type = STRING, label = REPEATED)
  public final List<String> badgeId;

  public AssetsRequestProto(Integer assetType, String query, String categoryId, List<String> assetId, Boolean retrieveVendingHistory, Boolean retrieveExtendedInfo, Integer sortOrder, Long startIndex, Long numEntries, Integer viewFilter, String rankingType, Boolean retrieveCarrierChannel, List<String> pendingDownloadAssetId, Boolean reconstructVendingHistory, Boolean unfilteredResults, List<String> badgeId) {
    this.assetType = assetType;
    this.query = query;
    this.categoryId = categoryId;
    this.assetId = immutableCopyOf(assetId);
    this.retrieveVendingHistory = retrieveVendingHistory;
    this.retrieveExtendedInfo = retrieveExtendedInfo;
    this.sortOrder = sortOrder;
    this.startIndex = startIndex;
    this.numEntries = numEntries;
    this.viewFilter = viewFilter;
    this.rankingType = rankingType;
    this.retrieveCarrierChannel = retrieveCarrierChannel;
    this.pendingDownloadAssetId = immutableCopyOf(pendingDownloadAssetId);
    this.reconstructVendingHistory = reconstructVendingHistory;
    this.unfilteredResults = unfilteredResults;
    this.badgeId = immutableCopyOf(badgeId);
  }

  private AssetsRequestProto(Builder builder) {
    this(builder.assetType, builder.query, builder.categoryId, builder.assetId, builder.retrieveVendingHistory, builder.retrieveExtendedInfo, builder.sortOrder, builder.startIndex, builder.numEntries, builder.viewFilter, builder.rankingType, builder.retrieveCarrierChannel, builder.pendingDownloadAssetId, builder.reconstructVendingHistory, builder.unfilteredResults, builder.badgeId);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AssetsRequestProto)) return false;
    AssetsRequestProto o = (AssetsRequestProto) other;
    return equals(assetType, o.assetType)
        && equals(query, o.query)
        && equals(categoryId, o.categoryId)
        && equals(assetId, o.assetId)
        && equals(retrieveVendingHistory, o.retrieveVendingHistory)
        && equals(retrieveExtendedInfo, o.retrieveExtendedInfo)
        && equals(sortOrder, o.sortOrder)
        && equals(startIndex, o.startIndex)
        && equals(numEntries, o.numEntries)
        && equals(viewFilter, o.viewFilter)
        && equals(rankingType, o.rankingType)
        && equals(retrieveCarrierChannel, o.retrieveCarrierChannel)
        && equals(pendingDownloadAssetId, o.pendingDownloadAssetId)
        && equals(reconstructVendingHistory, o.reconstructVendingHistory)
        && equals(unfilteredResults, o.unfilteredResults)
        && equals(badgeId, o.badgeId);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = assetType != null ? assetType.hashCode() : 0;
      result = result * 37 + (query != null ? query.hashCode() : 0);
      result = result * 37 + (categoryId != null ? categoryId.hashCode() : 0);
      result = result * 37 + (assetId != null ? assetId.hashCode() : 1);
      result = result * 37 + (retrieveVendingHistory != null ? retrieveVendingHistory.hashCode() : 0);
      result = result * 37 + (retrieveExtendedInfo != null ? retrieveExtendedInfo.hashCode() : 0);
      result = result * 37 + (sortOrder != null ? sortOrder.hashCode() : 0);
      result = result * 37 + (startIndex != null ? startIndex.hashCode() : 0);
      result = result * 37 + (numEntries != null ? numEntries.hashCode() : 0);
      result = result * 37 + (viewFilter != null ? viewFilter.hashCode() : 0);
      result = result * 37 + (rankingType != null ? rankingType.hashCode() : 0);
      result = result * 37 + (retrieveCarrierChannel != null ? retrieveCarrierChannel.hashCode() : 0);
      result = result * 37 + (pendingDownloadAssetId != null ? pendingDownloadAssetId.hashCode() : 1);
      result = result * 37 + (reconstructVendingHistory != null ? reconstructVendingHistory.hashCode() : 0);
      result = result * 37 + (unfilteredResults != null ? unfilteredResults.hashCode() : 0);
      result = result * 37 + (badgeId != null ? badgeId.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AssetsRequestProto> {

    public Integer assetType;
    public String query;
    public String categoryId;
    public List<String> assetId;
    public Boolean retrieveVendingHistory;
    public Boolean retrieveExtendedInfo;
    public Integer sortOrder;
    public Long startIndex;
    public Long numEntries;
    public Integer viewFilter;
    public String rankingType;
    public Boolean retrieveCarrierChannel;
    public List<String> pendingDownloadAssetId;
    public Boolean reconstructVendingHistory;
    public Boolean unfilteredResults;
    public List<String> badgeId;

    public Builder() {
    }

    public Builder(AssetsRequestProto message) {
      super(message);
      if (message == null) return;
      this.assetType = message.assetType;
      this.query = message.query;
      this.categoryId = message.categoryId;
      this.assetId = copyOf(message.assetId);
      this.retrieveVendingHistory = message.retrieveVendingHistory;
      this.retrieveExtendedInfo = message.retrieveExtendedInfo;
      this.sortOrder = message.sortOrder;
      this.startIndex = message.startIndex;
      this.numEntries = message.numEntries;
      this.viewFilter = message.viewFilter;
      this.rankingType = message.rankingType;
      this.retrieveCarrierChannel = message.retrieveCarrierChannel;
      this.pendingDownloadAssetId = copyOf(message.pendingDownloadAssetId);
      this.reconstructVendingHistory = message.reconstructVendingHistory;
      this.unfilteredResults = message.unfilteredResults;
      this.badgeId = copyOf(message.badgeId);
    }

    public Builder assetType(Integer assetType) {
      this.assetType = assetType;
      return this;
    }

    public Builder query(String query) {
      this.query = query;
      return this;
    }

    public Builder categoryId(String categoryId) {
      this.categoryId = categoryId;
      return this;
    }

    public Builder assetId(List<String> assetId) {
      this.assetId = checkForNulls(assetId);
      return this;
    }

    public Builder retrieveVendingHistory(Boolean retrieveVendingHistory) {
      this.retrieveVendingHistory = retrieveVendingHistory;
      return this;
    }

    public Builder retrieveExtendedInfo(Boolean retrieveExtendedInfo) {
      this.retrieveExtendedInfo = retrieveExtendedInfo;
      return this;
    }

    public Builder sortOrder(Integer sortOrder) {
      this.sortOrder = sortOrder;
      return this;
    }

    public Builder startIndex(Long startIndex) {
      this.startIndex = startIndex;
      return this;
    }

    public Builder numEntries(Long numEntries) {
      this.numEntries = numEntries;
      return this;
    }

    public Builder viewFilter(Integer viewFilter) {
      this.viewFilter = viewFilter;
      return this;
    }

    public Builder rankingType(String rankingType) {
      this.rankingType = rankingType;
      return this;
    }

    public Builder retrieveCarrierChannel(Boolean retrieveCarrierChannel) {
      this.retrieveCarrierChannel = retrieveCarrierChannel;
      return this;
    }

    public Builder pendingDownloadAssetId(List<String> pendingDownloadAssetId) {
      this.pendingDownloadAssetId = checkForNulls(pendingDownloadAssetId);
      return this;
    }

    public Builder reconstructVendingHistory(Boolean reconstructVendingHistory) {
      this.reconstructVendingHistory = reconstructVendingHistory;
      return this;
    }

    public Builder unfilteredResults(Boolean unfilteredResults) {
      this.unfilteredResults = unfilteredResults;
      return this;
    }

    public Builder badgeId(List<String> badgeId) {
      this.badgeId = checkForNulls(badgeId);
      return this;
    }

    @Override
    public AssetsRequestProto build() {
      return new AssetsRequestProto(this);
    }
  }
}
