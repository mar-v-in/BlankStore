// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Purchase.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class PurchaseOrderRequestProto extends Message {

  public static final String DEFAULT_GAIAAUTHTOKEN = "";
  public static final String DEFAULT_ASSETID = "";
  public static final String DEFAULT_TRANSACTIONID = "";
  public static final String DEFAULT_BILLINGINSTRUMENTID = "";
  public static final Boolean DEFAULT_TOSACCEPTED = false;
  public static final String DEFAULT_EXISTINGORDERID = "";
  public static final Integer DEFAULT_BILLINGINSTRUMENTTYPE = 0;
  public static final String DEFAULT_BILLINGPARAMETERSID = "";
  public static final Integer DEFAULT_PRODUCTTYPE = 0;
  public static final String DEFAULT_DEVELOPERPAYLOAD = "";

  @ProtoField(tag = 1, type = STRING)
  public final String gaiaAuthToken;

  @ProtoField(tag = 2, type = STRING)
  public final String assetId;

  @ProtoField(tag = 3, type = STRING)
  public final String transactionId;

  @ProtoField(tag = 4, type = STRING)
  public final String billingInstrumentId;

  @ProtoField(tag = 5, type = BOOL)
  public final Boolean tosAccepted;

  @ProtoField(tag = 6)
  public final CarrierBillingCredentialsProto carrierBillingCredentials;

  @ProtoField(tag = 7, type = STRING)
  public final String existingOrderId;

  @ProtoField(tag = 8, type = INT32)
  public final Integer billingInstrumentType;

  @ProtoField(tag = 9, type = STRING)
  public final String billingParametersId;

  @ProtoField(tag = 10)
  public final PaypalCredentialsProto paypalCredentials;

  @ProtoField(tag = 11)
  public final RiskHeaderInfoProto riskHeaderInfo;

  @ProtoField(tag = 12, type = INT32)
  public final Integer productType;

  @ProtoField(tag = 13)
  public final SignatureHashProto signatureHash;

  @ProtoField(tag = 14, type = STRING)
  public final String developerPayload;

  public PurchaseOrderRequestProto(String gaiaAuthToken, String assetId, String transactionId, String billingInstrumentId, Boolean tosAccepted, CarrierBillingCredentialsProto carrierBillingCredentials, String existingOrderId, Integer billingInstrumentType, String billingParametersId, PaypalCredentialsProto paypalCredentials, RiskHeaderInfoProto riskHeaderInfo, Integer productType, SignatureHashProto signatureHash, String developerPayload) {
    this.gaiaAuthToken = gaiaAuthToken;
    this.assetId = assetId;
    this.transactionId = transactionId;
    this.billingInstrumentId = billingInstrumentId;
    this.tosAccepted = tosAccepted;
    this.carrierBillingCredentials = carrierBillingCredentials;
    this.existingOrderId = existingOrderId;
    this.billingInstrumentType = billingInstrumentType;
    this.billingParametersId = billingParametersId;
    this.paypalCredentials = paypalCredentials;
    this.riskHeaderInfo = riskHeaderInfo;
    this.productType = productType;
    this.signatureHash = signatureHash;
    this.developerPayload = developerPayload;
  }

  private PurchaseOrderRequestProto(Builder builder) {
    this(builder.gaiaAuthToken, builder.assetId, builder.transactionId, builder.billingInstrumentId, builder.tosAccepted, builder.carrierBillingCredentials, builder.existingOrderId, builder.billingInstrumentType, builder.billingParametersId, builder.paypalCredentials, builder.riskHeaderInfo, builder.productType, builder.signatureHash, builder.developerPayload);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PurchaseOrderRequestProto)) return false;
    PurchaseOrderRequestProto o = (PurchaseOrderRequestProto) other;
    return equals(gaiaAuthToken, o.gaiaAuthToken)
        && equals(assetId, o.assetId)
        && equals(transactionId, o.transactionId)
        && equals(billingInstrumentId, o.billingInstrumentId)
        && equals(tosAccepted, o.tosAccepted)
        && equals(carrierBillingCredentials, o.carrierBillingCredentials)
        && equals(existingOrderId, o.existingOrderId)
        && equals(billingInstrumentType, o.billingInstrumentType)
        && equals(billingParametersId, o.billingParametersId)
        && equals(paypalCredentials, o.paypalCredentials)
        && equals(riskHeaderInfo, o.riskHeaderInfo)
        && equals(productType, o.productType)
        && equals(signatureHash, o.signatureHash)
        && equals(developerPayload, o.developerPayload);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = gaiaAuthToken != null ? gaiaAuthToken.hashCode() : 0;
      result = result * 37 + (assetId != null ? assetId.hashCode() : 0);
      result = result * 37 + (transactionId != null ? transactionId.hashCode() : 0);
      result = result * 37 + (billingInstrumentId != null ? billingInstrumentId.hashCode() : 0);
      result = result * 37 + (tosAccepted != null ? tosAccepted.hashCode() : 0);
      result = result * 37 + (carrierBillingCredentials != null ? carrierBillingCredentials.hashCode() : 0);
      result = result * 37 + (existingOrderId != null ? existingOrderId.hashCode() : 0);
      result = result * 37 + (billingInstrumentType != null ? billingInstrumentType.hashCode() : 0);
      result = result * 37 + (billingParametersId != null ? billingParametersId.hashCode() : 0);
      result = result * 37 + (paypalCredentials != null ? paypalCredentials.hashCode() : 0);
      result = result * 37 + (riskHeaderInfo != null ? riskHeaderInfo.hashCode() : 0);
      result = result * 37 + (productType != null ? productType.hashCode() : 0);
      result = result * 37 + (signatureHash != null ? signatureHash.hashCode() : 0);
      result = result * 37 + (developerPayload != null ? developerPayload.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PurchaseOrderRequestProto> {

    public String gaiaAuthToken;
    public String assetId;
    public String transactionId;
    public String billingInstrumentId;
    public Boolean tosAccepted;
    public CarrierBillingCredentialsProto carrierBillingCredentials;
    public String existingOrderId;
    public Integer billingInstrumentType;
    public String billingParametersId;
    public PaypalCredentialsProto paypalCredentials;
    public RiskHeaderInfoProto riskHeaderInfo;
    public Integer productType;
    public SignatureHashProto signatureHash;
    public String developerPayload;

    public Builder() {
    }

    public Builder(PurchaseOrderRequestProto message) {
      super(message);
      if (message == null) return;
      this.gaiaAuthToken = message.gaiaAuthToken;
      this.assetId = message.assetId;
      this.transactionId = message.transactionId;
      this.billingInstrumentId = message.billingInstrumentId;
      this.tosAccepted = message.tosAccepted;
      this.carrierBillingCredentials = message.carrierBillingCredentials;
      this.existingOrderId = message.existingOrderId;
      this.billingInstrumentType = message.billingInstrumentType;
      this.billingParametersId = message.billingParametersId;
      this.paypalCredentials = message.paypalCredentials;
      this.riskHeaderInfo = message.riskHeaderInfo;
      this.productType = message.productType;
      this.signatureHash = message.signatureHash;
      this.developerPayload = message.developerPayload;
    }

    public Builder gaiaAuthToken(String gaiaAuthToken) {
      this.gaiaAuthToken = gaiaAuthToken;
      return this;
    }

    public Builder assetId(String assetId) {
      this.assetId = assetId;
      return this;
    }

    public Builder transactionId(String transactionId) {
      this.transactionId = transactionId;
      return this;
    }

    public Builder billingInstrumentId(String billingInstrumentId) {
      this.billingInstrumentId = billingInstrumentId;
      return this;
    }

    public Builder tosAccepted(Boolean tosAccepted) {
      this.tosAccepted = tosAccepted;
      return this;
    }

    public Builder carrierBillingCredentials(CarrierBillingCredentialsProto carrierBillingCredentials) {
      this.carrierBillingCredentials = carrierBillingCredentials;
      return this;
    }

    public Builder existingOrderId(String existingOrderId) {
      this.existingOrderId = existingOrderId;
      return this;
    }

    public Builder billingInstrumentType(Integer billingInstrumentType) {
      this.billingInstrumentType = billingInstrumentType;
      return this;
    }

    public Builder billingParametersId(String billingParametersId) {
      this.billingParametersId = billingParametersId;
      return this;
    }

    public Builder paypalCredentials(PaypalCredentialsProto paypalCredentials) {
      this.paypalCredentials = paypalCredentials;
      return this;
    }

    public Builder riskHeaderInfo(RiskHeaderInfoProto riskHeaderInfo) {
      this.riskHeaderInfo = riskHeaderInfo;
      return this;
    }

    public Builder productType(Integer productType) {
      this.productType = productType;
      return this;
    }

    public Builder signatureHash(SignatureHashProto signatureHash) {
      this.signatureHash = signatureHash;
      return this;
    }

    public Builder developerPayload(String developerPayload) {
      this.developerPayload = developerPayload;
      return this;
    }

    @Override
    public PurchaseOrderRequestProto build() {
      return new PurchaseOrderRequestProto(this);
    }
  }
}
