// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Carrier.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class ExternalCarrierBillingInstrumentProto extends Message {

  public static final String DEFAULT_INSTRUMENTKEY = "";
  public static final String DEFAULT_SUBSCRIBERIDENTIFIER = "";
  public static final String DEFAULT_ACCOUNTTYPE = "";
  public static final String DEFAULT_SUBSCRIBERCURRENCY = "";
  public static final Long DEFAULT_TRANSACTIONLIMIT = 0L;
  public static final String DEFAULT_SUBSCRIBERNAME = "";
  public static final String DEFAULT_ADDRESS1 = "";
  public static final String DEFAULT_ADDRESS2 = "";
  public static final String DEFAULT_CITY = "";
  public static final String DEFAULT_STATE = "";
  public static final String DEFAULT_POSTALCODE = "";
  public static final String DEFAULT_COUNTRY = "";

  @ProtoField(tag = 1, type = STRING)
  public final String instrumentKey;

  @ProtoField(tag = 2, type = STRING)
  public final String subscriberIdentifier;

  @ProtoField(tag = 3, type = STRING)
  public final String accountType;

  @ProtoField(tag = 4, type = STRING)
  public final String subscriberCurrency;

  @ProtoField(tag = 5, type = UINT64)
  public final Long transactionLimit;

  @ProtoField(tag = 6, type = STRING)
  public final String subscriberName;

  @ProtoField(tag = 7, type = STRING)
  public final String address1;

  @ProtoField(tag = 8, type = STRING)
  public final String address2;

  @ProtoField(tag = 9, type = STRING)
  public final String city;

  @ProtoField(tag = 10, type = STRING)
  public final String state;

  @ProtoField(tag = 11, type = STRING)
  public final String postalCode;

  @ProtoField(tag = 12, type = STRING)
  public final String country;

  @ProtoField(tag = 13)
  public final EncryptedSubscriberInfo encryptedSubscriberInfo;

  public ExternalCarrierBillingInstrumentProto(String instrumentKey, String subscriberIdentifier, String accountType, String subscriberCurrency, Long transactionLimit, String subscriberName, String address1, String address2, String city, String state, String postalCode, String country, EncryptedSubscriberInfo encryptedSubscriberInfo) {
    this.instrumentKey = instrumentKey;
    this.subscriberIdentifier = subscriberIdentifier;
    this.accountType = accountType;
    this.subscriberCurrency = subscriberCurrency;
    this.transactionLimit = transactionLimit;
    this.subscriberName = subscriberName;
    this.address1 = address1;
    this.address2 = address2;
    this.city = city;
    this.state = state;
    this.postalCode = postalCode;
    this.country = country;
    this.encryptedSubscriberInfo = encryptedSubscriberInfo;
  }

  private ExternalCarrierBillingInstrumentProto(Builder builder) {
    this(builder.instrumentKey, builder.subscriberIdentifier, builder.accountType, builder.subscriberCurrency, builder.transactionLimit, builder.subscriberName, builder.address1, builder.address2, builder.city, builder.state, builder.postalCode, builder.country, builder.encryptedSubscriberInfo);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ExternalCarrierBillingInstrumentProto)) return false;
    ExternalCarrierBillingInstrumentProto o = (ExternalCarrierBillingInstrumentProto) other;
    return equals(instrumentKey, o.instrumentKey)
        && equals(subscriberIdentifier, o.subscriberIdentifier)
        && equals(accountType, o.accountType)
        && equals(subscriberCurrency, o.subscriberCurrency)
        && equals(transactionLimit, o.transactionLimit)
        && equals(subscriberName, o.subscriberName)
        && equals(address1, o.address1)
        && equals(address2, o.address2)
        && equals(city, o.city)
        && equals(state, o.state)
        && equals(postalCode, o.postalCode)
        && equals(country, o.country)
        && equals(encryptedSubscriberInfo, o.encryptedSubscriberInfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = instrumentKey != null ? instrumentKey.hashCode() : 0;
      result = result * 37 + (subscriberIdentifier != null ? subscriberIdentifier.hashCode() : 0);
      result = result * 37 + (accountType != null ? accountType.hashCode() : 0);
      result = result * 37 + (subscriberCurrency != null ? subscriberCurrency.hashCode() : 0);
      result = result * 37 + (transactionLimit != null ? transactionLimit.hashCode() : 0);
      result = result * 37 + (subscriberName != null ? subscriberName.hashCode() : 0);
      result = result * 37 + (address1 != null ? address1.hashCode() : 0);
      result = result * 37 + (address2 != null ? address2.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (postalCode != null ? postalCode.hashCode() : 0);
      result = result * 37 + (country != null ? country.hashCode() : 0);
      result = result * 37 + (encryptedSubscriberInfo != null ? encryptedSubscriberInfo.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ExternalCarrierBillingInstrumentProto> {

    public String instrumentKey;
    public String subscriberIdentifier;
    public String accountType;
    public String subscriberCurrency;
    public Long transactionLimit;
    public String subscriberName;
    public String address1;
    public String address2;
    public String city;
    public String state;
    public String postalCode;
    public String country;
    public EncryptedSubscriberInfo encryptedSubscriberInfo;

    public Builder() {
    }

    public Builder(ExternalCarrierBillingInstrumentProto message) {
      super(message);
      if (message == null) return;
      this.instrumentKey = message.instrumentKey;
      this.subscriberIdentifier = message.subscriberIdentifier;
      this.accountType = message.accountType;
      this.subscriberCurrency = message.subscriberCurrency;
      this.transactionLimit = message.transactionLimit;
      this.subscriberName = message.subscriberName;
      this.address1 = message.address1;
      this.address2 = message.address2;
      this.city = message.city;
      this.state = message.state;
      this.postalCode = message.postalCode;
      this.country = message.country;
      this.encryptedSubscriberInfo = message.encryptedSubscriberInfo;
    }

    public Builder instrumentKey(String instrumentKey) {
      this.instrumentKey = instrumentKey;
      return this;
    }

    public Builder subscriberIdentifier(String subscriberIdentifier) {
      this.subscriberIdentifier = subscriberIdentifier;
      return this;
    }

    public Builder accountType(String accountType) {
      this.accountType = accountType;
      return this;
    }

    public Builder subscriberCurrency(String subscriberCurrency) {
      this.subscriberCurrency = subscriberCurrency;
      return this;
    }

    public Builder transactionLimit(Long transactionLimit) {
      this.transactionLimit = transactionLimit;
      return this;
    }

    public Builder subscriberName(String subscriberName) {
      this.subscriberName = subscriberName;
      return this;
    }

    public Builder address1(String address1) {
      this.address1 = address1;
      return this;
    }

    public Builder address2(String address2) {
      this.address2 = address2;
      return this;
    }

    public Builder city(String city) {
      this.city = city;
      return this;
    }

    public Builder state(String state) {
      this.state = state;
      return this;
    }

    public Builder postalCode(String postalCode) {
      this.postalCode = postalCode;
      return this;
    }

    public Builder country(String country) {
      this.country = country;
      return this;
    }

    public Builder encryptedSubscriberInfo(EncryptedSubscriberInfo encryptedSubscriberInfo) {
      this.encryptedSubscriberInfo = encryptedSubscriberInfo;
      return this;
    }

    @Override
    public ExternalCarrierBillingInstrumentProto build() {
      return new ExternalCarrierBillingInstrumentProto(this);
    }
  }
}
