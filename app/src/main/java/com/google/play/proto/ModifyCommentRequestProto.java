// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Comment.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class ModifyCommentRequestProto extends Message {

  public static final String DEFAULT_ASSETID = "";
  public static final Boolean DEFAULT_DELETECOMMENT = false;
  public static final Boolean DEFAULT_FLAGASSET = false;
  public static final Integer DEFAULT_FLAGTYPE = 0;
  public static final String DEFAULT_FLAGMESSAGE = "";
  public static final Boolean DEFAULT_NONFLAGFLOW = false;

  @ProtoField(tag = 1, type = STRING)
  public final String assetId;

  @ProtoField(tag = 2)
  public final ExternalCommentProto comment;

  @ProtoField(tag = 3, type = BOOL)
  public final Boolean deleteComment;

  @ProtoField(tag = 4, type = BOOL)
  public final Boolean flagAsset;

  @ProtoField(tag = 5, type = INT32)
  public final Integer flagType;

  @ProtoField(tag = 6, type = STRING)
  public final String flagMessage;

  @ProtoField(tag = 7, type = BOOL)
  public final Boolean nonFlagFlow;

  public ModifyCommentRequestProto(String assetId, ExternalCommentProto comment, Boolean deleteComment, Boolean flagAsset, Integer flagType, String flagMessage, Boolean nonFlagFlow) {
    this.assetId = assetId;
    this.comment = comment;
    this.deleteComment = deleteComment;
    this.flagAsset = flagAsset;
    this.flagType = flagType;
    this.flagMessage = flagMessage;
    this.nonFlagFlow = nonFlagFlow;
  }

  private ModifyCommentRequestProto(Builder builder) {
    this(builder.assetId, builder.comment, builder.deleteComment, builder.flagAsset, builder.flagType, builder.flagMessage, builder.nonFlagFlow);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ModifyCommentRequestProto)) return false;
    ModifyCommentRequestProto o = (ModifyCommentRequestProto) other;
    return equals(assetId, o.assetId)
        && equals(comment, o.comment)
        && equals(deleteComment, o.deleteComment)
        && equals(flagAsset, o.flagAsset)
        && equals(flagType, o.flagType)
        && equals(flagMessage, o.flagMessage)
        && equals(nonFlagFlow, o.nonFlagFlow);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = assetId != null ? assetId.hashCode() : 0;
      result = result * 37 + (comment != null ? comment.hashCode() : 0);
      result = result * 37 + (deleteComment != null ? deleteComment.hashCode() : 0);
      result = result * 37 + (flagAsset != null ? flagAsset.hashCode() : 0);
      result = result * 37 + (flagType != null ? flagType.hashCode() : 0);
      result = result * 37 + (flagMessage != null ? flagMessage.hashCode() : 0);
      result = result * 37 + (nonFlagFlow != null ? nonFlagFlow.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ModifyCommentRequestProto> {

    public String assetId;
    public ExternalCommentProto comment;
    public Boolean deleteComment;
    public Boolean flagAsset;
    public Integer flagType;
    public String flagMessage;
    public Boolean nonFlagFlow;

    public Builder() {
    }

    public Builder(ModifyCommentRequestProto message) {
      super(message);
      if (message == null) return;
      this.assetId = message.assetId;
      this.comment = message.comment;
      this.deleteComment = message.deleteComment;
      this.flagAsset = message.flagAsset;
      this.flagType = message.flagType;
      this.flagMessage = message.flagMessage;
      this.nonFlagFlow = message.nonFlagFlow;
    }

    public Builder assetId(String assetId) {
      this.assetId = assetId;
      return this;
    }

    public Builder comment(ExternalCommentProto comment) {
      this.comment = comment;
      return this;
    }

    public Builder deleteComment(Boolean deleteComment) {
      this.deleteComment = deleteComment;
      return this;
    }

    public Builder flagAsset(Boolean flagAsset) {
      this.flagAsset = flagAsset;
      return this;
    }

    public Builder flagType(Integer flagType) {
      this.flagType = flagType;
      return this;
    }

    public Builder flagMessage(String flagMessage) {
      this.flagMessage = flagMessage;
      return this;
    }

    public Builder nonFlagFlow(Boolean nonFlagFlow) {
      this.nonFlagFlow = nonFlagFlow;
      return this;
    }

    @Override
    public ModifyCommentRequestProto build() {
      return new ModifyCommentRequestProto(this);
    }
  }
}
