// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Challenges.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

public final class Challenge extends Message {

  @ProtoField(tag = 1)
  public final AddressChallenge addressChallenge;

  @ProtoField(tag = 2)
  public final AuthenticationChallenge authenticationChallenge;

  public Challenge(AddressChallenge addressChallenge, AuthenticationChallenge authenticationChallenge) {
    this.addressChallenge = addressChallenge;
    this.authenticationChallenge = authenticationChallenge;
  }

  private Challenge(Builder builder) {
    this(builder.addressChallenge, builder.authenticationChallenge);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Challenge)) return false;
    Challenge o = (Challenge) other;
    return equals(addressChallenge, o.addressChallenge)
        && equals(authenticationChallenge, o.authenticationChallenge);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = addressChallenge != null ? addressChallenge.hashCode() : 0;
      result = result * 37 + (authenticationChallenge != null ? authenticationChallenge.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Challenge> {

    public AddressChallenge addressChallenge;
    public AuthenticationChallenge authenticationChallenge;

    public Builder() {
    }

    public Builder(Challenge message) {
      super(message);
      if (message == null) return;
      this.addressChallenge = message.addressChallenge;
      this.authenticationChallenge = message.authenticationChallenge;
    }

    public Builder addressChallenge(AddressChallenge addressChallenge) {
      this.addressChallenge = addressChallenge;
      return this;
    }

    public Builder authenticationChallenge(AuthenticationChallenge authenticationChallenge) {
      this.authenticationChallenge = authenticationChallenge;
      return this;
    }

    @Override
    public Challenge build() {
      return new Challenge(this);
    }
  }
}
