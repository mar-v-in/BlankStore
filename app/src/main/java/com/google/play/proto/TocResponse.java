// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Unsorted.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class TocResponse extends Message {

  public static final List<CorpusMetadata> DEFAULT_CORPUS = Collections.emptyList();
  public static final Integer DEFAULT_TOSVERSIONDEPRECATED = 0;
  public static final String DEFAULT_TOSCONTENT = "";
  public static final String DEFAULT_HOMEURL = "";
  public static final String DEFAULT_TOSCHECKBOXTEXTMARKETINGEMAILS = "";
  public static final String DEFAULT_TOSTOKEN = "";
  public static final String DEFAULT_ICONOVERRIDEURL = "";
  public static final Boolean DEFAULT_REQUIRESUPLOADDEVICECONFIG = false;
  public static final String DEFAULT_RECSWIDGETURL = "";

  @ProtoField(tag = 1, label = REPEATED)
  public final List<CorpusMetadata> corpus;

  @ProtoField(tag = 2, type = INT32)
  public final Integer tosVersionDeprecated;

  @ProtoField(tag = 3, type = STRING)
  public final String tosContent;

  @ProtoField(tag = 4, type = STRING)
  public final String homeUrl;

  @ProtoField(tag = 5)
  public final Experiments experiments;

  @ProtoField(tag = 6, type = STRING)
  public final String tosCheckboxTextMarketingEmails;

  @ProtoField(tag = 7, type = STRING)
  public final String tosToken;

  @ProtoField(tag = 8)
  public final UserSettings userSettings;

  @ProtoField(tag = 9, type = STRING)
  public final String iconOverrideUrl;

  @ProtoField(tag = 10)
  public final SelfUpdateConfig selfUpdateConfig;

  @ProtoField(tag = 11, type = BOOL)
  public final Boolean requiresUploadDeviceConfig;

  @ProtoField(tag = 12)
  public final BillingConfig billingConfig;

  @ProtoField(tag = 13, type = STRING)
  public final String recsWidgetUrl;

  public TocResponse(List<CorpusMetadata> corpus, Integer tosVersionDeprecated, String tosContent, String homeUrl, Experiments experiments, String tosCheckboxTextMarketingEmails, String tosToken, UserSettings userSettings, String iconOverrideUrl, SelfUpdateConfig selfUpdateConfig, Boolean requiresUploadDeviceConfig, BillingConfig billingConfig, String recsWidgetUrl) {
    this.corpus = immutableCopyOf(corpus);
    this.tosVersionDeprecated = tosVersionDeprecated;
    this.tosContent = tosContent;
    this.homeUrl = homeUrl;
    this.experiments = experiments;
    this.tosCheckboxTextMarketingEmails = tosCheckboxTextMarketingEmails;
    this.tosToken = tosToken;
    this.userSettings = userSettings;
    this.iconOverrideUrl = iconOverrideUrl;
    this.selfUpdateConfig = selfUpdateConfig;
    this.requiresUploadDeviceConfig = requiresUploadDeviceConfig;
    this.billingConfig = billingConfig;
    this.recsWidgetUrl = recsWidgetUrl;
  }

  private TocResponse(Builder builder) {
    this(builder.corpus, builder.tosVersionDeprecated, builder.tosContent, builder.homeUrl, builder.experiments, builder.tosCheckboxTextMarketingEmails, builder.tosToken, builder.userSettings, builder.iconOverrideUrl, builder.selfUpdateConfig, builder.requiresUploadDeviceConfig, builder.billingConfig, builder.recsWidgetUrl);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TocResponse)) return false;
    TocResponse o = (TocResponse) other;
    return equals(corpus, o.corpus)
        && equals(tosVersionDeprecated, o.tosVersionDeprecated)
        && equals(tosContent, o.tosContent)
        && equals(homeUrl, o.homeUrl)
        && equals(experiments, o.experiments)
        && equals(tosCheckboxTextMarketingEmails, o.tosCheckboxTextMarketingEmails)
        && equals(tosToken, o.tosToken)
        && equals(userSettings, o.userSettings)
        && equals(iconOverrideUrl, o.iconOverrideUrl)
        && equals(selfUpdateConfig, o.selfUpdateConfig)
        && equals(requiresUploadDeviceConfig, o.requiresUploadDeviceConfig)
        && equals(billingConfig, o.billingConfig)
        && equals(recsWidgetUrl, o.recsWidgetUrl);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = corpus != null ? corpus.hashCode() : 1;
      result = result * 37 + (tosVersionDeprecated != null ? tosVersionDeprecated.hashCode() : 0);
      result = result * 37 + (tosContent != null ? tosContent.hashCode() : 0);
      result = result * 37 + (homeUrl != null ? homeUrl.hashCode() : 0);
      result = result * 37 + (experiments != null ? experiments.hashCode() : 0);
      result = result * 37 + (tosCheckboxTextMarketingEmails != null ? tosCheckboxTextMarketingEmails.hashCode() : 0);
      result = result * 37 + (tosToken != null ? tosToken.hashCode() : 0);
      result = result * 37 + (userSettings != null ? userSettings.hashCode() : 0);
      result = result * 37 + (iconOverrideUrl != null ? iconOverrideUrl.hashCode() : 0);
      result = result * 37 + (selfUpdateConfig != null ? selfUpdateConfig.hashCode() : 0);
      result = result * 37 + (requiresUploadDeviceConfig != null ? requiresUploadDeviceConfig.hashCode() : 0);
      result = result * 37 + (billingConfig != null ? billingConfig.hashCode() : 0);
      result = result * 37 + (recsWidgetUrl != null ? recsWidgetUrl.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TocResponse> {

    public List<CorpusMetadata> corpus;
    public Integer tosVersionDeprecated;
    public String tosContent;
    public String homeUrl;
    public Experiments experiments;
    public String tosCheckboxTextMarketingEmails;
    public String tosToken;
    public UserSettings userSettings;
    public String iconOverrideUrl;
    public SelfUpdateConfig selfUpdateConfig;
    public Boolean requiresUploadDeviceConfig;
    public BillingConfig billingConfig;
    public String recsWidgetUrl;

    public Builder() {
    }

    public Builder(TocResponse message) {
      super(message);
      if (message == null) return;
      this.corpus = copyOf(message.corpus);
      this.tosVersionDeprecated = message.tosVersionDeprecated;
      this.tosContent = message.tosContent;
      this.homeUrl = message.homeUrl;
      this.experiments = message.experiments;
      this.tosCheckboxTextMarketingEmails = message.tosCheckboxTextMarketingEmails;
      this.tosToken = message.tosToken;
      this.userSettings = message.userSettings;
      this.iconOverrideUrl = message.iconOverrideUrl;
      this.selfUpdateConfig = message.selfUpdateConfig;
      this.requiresUploadDeviceConfig = message.requiresUploadDeviceConfig;
      this.billingConfig = message.billingConfig;
      this.recsWidgetUrl = message.recsWidgetUrl;
    }

    public Builder corpus(List<CorpusMetadata> corpus) {
      this.corpus = checkForNulls(corpus);
      return this;
    }

    public Builder tosVersionDeprecated(Integer tosVersionDeprecated) {
      this.tosVersionDeprecated = tosVersionDeprecated;
      return this;
    }

    public Builder tosContent(String tosContent) {
      this.tosContent = tosContent;
      return this;
    }

    public Builder homeUrl(String homeUrl) {
      this.homeUrl = homeUrl;
      return this;
    }

    public Builder experiments(Experiments experiments) {
      this.experiments = experiments;
      return this;
    }

    public Builder tosCheckboxTextMarketingEmails(String tosCheckboxTextMarketingEmails) {
      this.tosCheckboxTextMarketingEmails = tosCheckboxTextMarketingEmails;
      return this;
    }

    public Builder tosToken(String tosToken) {
      this.tosToken = tosToken;
      return this;
    }

    public Builder userSettings(UserSettings userSettings) {
      this.userSettings = userSettings;
      return this;
    }

    public Builder iconOverrideUrl(String iconOverrideUrl) {
      this.iconOverrideUrl = iconOverrideUrl;
      return this;
    }

    public Builder selfUpdateConfig(SelfUpdateConfig selfUpdateConfig) {
      this.selfUpdateConfig = selfUpdateConfig;
      return this;
    }

    public Builder requiresUploadDeviceConfig(Boolean requiresUploadDeviceConfig) {
      this.requiresUploadDeviceConfig = requiresUploadDeviceConfig;
      return this;
    }

    public Builder billingConfig(BillingConfig billingConfig) {
      this.billingConfig = billingConfig;
      return this;
    }

    public Builder recsWidgetUrl(String recsWidgetUrl) {
      this.recsWidgetUrl = recsWidgetUrl;
      return this;
    }

    @Override
    public TocResponse build() {
      return new TocResponse(this);
    }
  }
}
