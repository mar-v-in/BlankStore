// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Purchase.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class PurchaseInfoProto extends Message {

  public static final String DEFAULT_TRANSACTIONID = "";
  public static final List<Integer> DEFAULT_ERRORINPUTFIELDS = Collections.emptyList();
  public static final String DEFAULT_REFUNDPOLICY = "";
  public static final Boolean DEFAULT_USERCANADDGDD = false;
  public static final List<Integer> DEFAULT_ELIGIBLEINSTRUMENTTYPES = Collections.emptyList();
  public static final String DEFAULT_ORDERID = "";

  @ProtoField(tag = 1, type = STRING)
  public final String transactionId;

  @ProtoField(tag = 2)
  public final PurchaseCartInfoProto cartInfo;

  @ProtoField(tag = 3)
  public final BillingInstrumentsProto billingInstruments;

  @ProtoField(tag = 9, type = INT32, label = REPEATED)
  public final List<Integer> errorInputFields;

  @ProtoField(tag = 10, type = STRING)
  public final String refundPolicy;

  @ProtoField(tag = 12, type = BOOL)
  public final Boolean userCanAddGdd;

  @ProtoField(tag = 13, type = INT32, label = REPEATED)
  public final List<Integer> eligibleInstrumentTypes;

  @ProtoField(tag = 15, type = STRING)
  public final String orderId;

  public PurchaseInfoProto(String transactionId, PurchaseCartInfoProto cartInfo, BillingInstrumentsProto billingInstruments, List<Integer> errorInputFields, String refundPolicy, Boolean userCanAddGdd, List<Integer> eligibleInstrumentTypes, String orderId) {
    this.transactionId = transactionId;
    this.cartInfo = cartInfo;
    this.billingInstruments = billingInstruments;
    this.errorInputFields = immutableCopyOf(errorInputFields);
    this.refundPolicy = refundPolicy;
    this.userCanAddGdd = userCanAddGdd;
    this.eligibleInstrumentTypes = immutableCopyOf(eligibleInstrumentTypes);
    this.orderId = orderId;
  }

  private PurchaseInfoProto(Builder builder) {
    this(builder.transactionId, builder.cartInfo, builder.billingInstruments, builder.errorInputFields, builder.refundPolicy, builder.userCanAddGdd, builder.eligibleInstrumentTypes, builder.orderId);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PurchaseInfoProto)) return false;
    PurchaseInfoProto o = (PurchaseInfoProto) other;
    return equals(transactionId, o.transactionId)
        && equals(cartInfo, o.cartInfo)
        && equals(billingInstruments, o.billingInstruments)
        && equals(errorInputFields, o.errorInputFields)
        && equals(refundPolicy, o.refundPolicy)
        && equals(userCanAddGdd, o.userCanAddGdd)
        && equals(eligibleInstrumentTypes, o.eligibleInstrumentTypes)
        && equals(orderId, o.orderId);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = transactionId != null ? transactionId.hashCode() : 0;
      result = result * 37 + (cartInfo != null ? cartInfo.hashCode() : 0);
      result = result * 37 + (billingInstruments != null ? billingInstruments.hashCode() : 0);
      result = result * 37 + (errorInputFields != null ? errorInputFields.hashCode() : 1);
      result = result * 37 + (refundPolicy != null ? refundPolicy.hashCode() : 0);
      result = result * 37 + (userCanAddGdd != null ? userCanAddGdd.hashCode() : 0);
      result = result * 37 + (eligibleInstrumentTypes != null ? eligibleInstrumentTypes.hashCode() : 1);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PurchaseInfoProto> {

    public String transactionId;
    public PurchaseCartInfoProto cartInfo;
    public BillingInstrumentsProto billingInstruments;
    public List<Integer> errorInputFields;
    public String refundPolicy;
    public Boolean userCanAddGdd;
    public List<Integer> eligibleInstrumentTypes;
    public String orderId;

    public Builder() {
    }

    public Builder(PurchaseInfoProto message) {
      super(message);
      if (message == null) return;
      this.transactionId = message.transactionId;
      this.cartInfo = message.cartInfo;
      this.billingInstruments = message.billingInstruments;
      this.errorInputFields = copyOf(message.errorInputFields);
      this.refundPolicy = message.refundPolicy;
      this.userCanAddGdd = message.userCanAddGdd;
      this.eligibleInstrumentTypes = copyOf(message.eligibleInstrumentTypes);
      this.orderId = message.orderId;
    }

    public Builder transactionId(String transactionId) {
      this.transactionId = transactionId;
      return this;
    }

    public Builder cartInfo(PurchaseCartInfoProto cartInfo) {
      this.cartInfo = cartInfo;
      return this;
    }

    public Builder billingInstruments(BillingInstrumentsProto billingInstruments) {
      this.billingInstruments = billingInstruments;
      return this;
    }

    public Builder errorInputFields(List<Integer> errorInputFields) {
      this.errorInputFields = checkForNulls(errorInputFields);
      return this;
    }

    public Builder refundPolicy(String refundPolicy) {
      this.refundPolicy = refundPolicy;
      return this;
    }

    public Builder userCanAddGdd(Boolean userCanAddGdd) {
      this.userCanAddGdd = userCanAddGdd;
      return this;
    }

    public Builder eligibleInstrumentTypes(List<Integer> eligibleInstrumentTypes) {
      this.eligibleInstrumentTypes = checkForNulls(eligibleInstrumentTypes);
      return this;
    }

    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    @Override
    public PurchaseInfoProto build() {
      return new PurchaseInfoProto(this);
    }
  }
}
