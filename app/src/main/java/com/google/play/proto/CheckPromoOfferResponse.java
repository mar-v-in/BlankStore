// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Promo.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Label.REPEATED;

public final class CheckPromoOfferResponse extends Message {

  public static final List<AvailablePromoOffer> DEFAULT_AVAILABLEOFFER = Collections.emptyList();
  public static final Boolean DEFAULT_CHECKOUTTOKENREQUIRED = false;

  @ProtoField(tag = 1, label = REPEATED)
  public final List<AvailablePromoOffer> availableOffer;

  @ProtoField(tag = 2)
  public final RedeemedPromoOffer redeemedOffer;

  @ProtoField(tag = 3, type = BOOL)
  public final Boolean checkoutTokenRequired;

  public CheckPromoOfferResponse(List<AvailablePromoOffer> availableOffer, RedeemedPromoOffer redeemedOffer, Boolean checkoutTokenRequired) {
    this.availableOffer = immutableCopyOf(availableOffer);
    this.redeemedOffer = redeemedOffer;
    this.checkoutTokenRequired = checkoutTokenRequired;
  }

  private CheckPromoOfferResponse(Builder builder) {
    this(builder.availableOffer, builder.redeemedOffer, builder.checkoutTokenRequired);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CheckPromoOfferResponse)) return false;
    CheckPromoOfferResponse o = (CheckPromoOfferResponse) other;
    return equals(availableOffer, o.availableOffer)
        && equals(redeemedOffer, o.redeemedOffer)
        && equals(checkoutTokenRequired, o.checkoutTokenRequired);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = availableOffer != null ? availableOffer.hashCode() : 1;
      result = result * 37 + (redeemedOffer != null ? redeemedOffer.hashCode() : 0);
      result = result * 37 + (checkoutTokenRequired != null ? checkoutTokenRequired.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CheckPromoOfferResponse> {

    public List<AvailablePromoOffer> availableOffer;
    public RedeemedPromoOffer redeemedOffer;
    public Boolean checkoutTokenRequired;

    public Builder() {
    }

    public Builder(CheckPromoOfferResponse message) {
      super(message);
      if (message == null) return;
      this.availableOffer = copyOf(message.availableOffer);
      this.redeemedOffer = message.redeemedOffer;
      this.checkoutTokenRequired = message.checkoutTokenRequired;
    }

    public Builder availableOffer(List<AvailablePromoOffer> availableOffer) {
      this.availableOffer = checkForNulls(availableOffer);
      return this;
    }

    public Builder redeemedOffer(RedeemedPromoOffer redeemedOffer) {
      this.redeemedOffer = redeemedOffer;
      return this;
    }

    public Builder checkoutTokenRequired(Boolean checkoutTokenRequired) {
      this.checkoutTokenRequired = checkoutTokenRequired;
      return this;
    }

    @Override
    public CheckPromoOfferResponse build() {
      return new CheckPromoOfferResponse(this);
    }
  }
}
