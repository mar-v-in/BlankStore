// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Music.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class SongDetails extends Message {

  public static final String DEFAULT_NAME = "";
  public static final String DEFAULT_ALBUMNAME = "";
  public static final Integer DEFAULT_TRACKNUMBER = 0;
  public static final String DEFAULT_PREVIEWURL = "";

  @ProtoField(tag = 1, type = STRING)
  public final String name;

  @ProtoField(tag = 2)
  public final MusicDetails details;

  @ProtoField(tag = 3, type = STRING)
  public final String albumName;

  @ProtoField(tag = 4, type = INT32)
  public final Integer trackNumber;

  @ProtoField(tag = 5, type = STRING)
  public final String previewUrl;

  @ProtoField(tag = 6)
  public final ArtistDetails displayArtist;

  public SongDetails(String name, MusicDetails details, String albumName, Integer trackNumber, String previewUrl, ArtistDetails displayArtist) {
    this.name = name;
    this.details = details;
    this.albumName = albumName;
    this.trackNumber = trackNumber;
    this.previewUrl = previewUrl;
    this.displayArtist = displayArtist;
  }

  private SongDetails(Builder builder) {
    this(builder.name, builder.details, builder.albumName, builder.trackNumber, builder.previewUrl, builder.displayArtist);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SongDetails)) return false;
    SongDetails o = (SongDetails) other;
    return equals(name, o.name)
        && equals(details, o.details)
        && equals(albumName, o.albumName)
        && equals(trackNumber, o.trackNumber)
        && equals(previewUrl, o.previewUrl)
        && equals(displayArtist, o.displayArtist);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = name != null ? name.hashCode() : 0;
      result = result * 37 + (details != null ? details.hashCode() : 0);
      result = result * 37 + (albumName != null ? albumName.hashCode() : 0);
      result = result * 37 + (trackNumber != null ? trackNumber.hashCode() : 0);
      result = result * 37 + (previewUrl != null ? previewUrl.hashCode() : 0);
      result = result * 37 + (displayArtist != null ? displayArtist.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SongDetails> {

    public String name;
    public MusicDetails details;
    public String albumName;
    public Integer trackNumber;
    public String previewUrl;
    public ArtistDetails displayArtist;

    public Builder() {
    }

    public Builder(SongDetails message) {
      super(message);
      if (message == null) return;
      this.name = message.name;
      this.details = message.details;
      this.albumName = message.albumName;
      this.trackNumber = message.trackNumber;
      this.previewUrl = message.previewUrl;
      this.displayArtist = message.displayArtist;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder details(MusicDetails details) {
      this.details = details;
      return this;
    }

    public Builder albumName(String albumName) {
      this.albumName = albumName;
      return this;
    }

    public Builder trackNumber(Integer trackNumber) {
      this.trackNumber = trackNumber;
      return this;
    }

    public Builder previewUrl(String previewUrl) {
      this.previewUrl = previewUrl;
      return this;
    }

    public Builder displayArtist(ArtistDetails displayArtist) {
      this.displayArtist = displayArtist;
      return this;
    }

    @Override
    public SongDetails build() {
      return new SongDetails(this);
    }
  }
}
