// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Asset.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class DownloadInfoProto extends Message {

  public static final Long DEFAULT_APKSIZE = 0L;
  public static final List<FileMetadataProto> DEFAULT_ADDITIONALFILE = Collections.emptyList();

  @ProtoField(tag = 1, type = INT64)
  public final Long apkSize;

  @ProtoField(tag = 2, label = REPEATED)
  public final List<FileMetadataProto> additionalFile;

  public DownloadInfoProto(Long apkSize, List<FileMetadataProto> additionalFile) {
    this.apkSize = apkSize;
    this.additionalFile = immutableCopyOf(additionalFile);
  }

  private DownloadInfoProto(Builder builder) {
    this(builder.apkSize, builder.additionalFile);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DownloadInfoProto)) return false;
    DownloadInfoProto o = (DownloadInfoProto) other;
    return equals(apkSize, o.apkSize)
        && equals(additionalFile, o.additionalFile);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = apkSize != null ? apkSize.hashCode() : 0;
      result = result * 37 + (additionalFile != null ? additionalFile.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<DownloadInfoProto> {

    public Long apkSize;
    public List<FileMetadataProto> additionalFile;

    public Builder() {
    }

    public Builder(DownloadInfoProto message) {
      super(message);
      if (message == null) return;
      this.apkSize = message.apkSize;
      this.additionalFile = copyOf(message.additionalFile);
    }

    public Builder apkSize(Long apkSize) {
      this.apkSize = apkSize;
      return this;
    }

    public Builder additionalFile(List<FileMetadataProto> additionalFile) {
      this.additionalFile = checkForNulls(additionalFile);
      return this;
    }

    @Override
    public DownloadInfoProto build() {
      return new DownloadInfoProto(this);
    }
  }
}
