// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Unsorted.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class AssetInstallStateProto extends Message {

  public static final String DEFAULT_ASSETID = "";
  public static final Integer DEFAULT_ASSETSTATE = 0;
  public static final Long DEFAULT_INSTALLTIME = 0L;
  public static final Long DEFAULT_UNINSTALLTIME = 0L;
  public static final String DEFAULT_PACKAGENAME = "";
  public static final Integer DEFAULT_VERSIONCODE = 0;
  public static final String DEFAULT_ASSETREFERRER = "";

  @ProtoField(tag = 3, type = STRING)
  public final String assetId;

  @ProtoField(tag = 4, type = INT32)
  public final Integer assetState;

  @ProtoField(tag = 5, type = INT64)
  public final Long installTime;

  @ProtoField(tag = 6, type = INT64)
  public final Long uninstallTime;

  @ProtoField(tag = 7, type = STRING)
  public final String packageName;

  @ProtoField(tag = 8, type = INT32)
  public final Integer versionCode;

  @ProtoField(tag = 9, type = STRING)
  public final String assetReferrer;

  public AssetInstallStateProto(String assetId, Integer assetState, Long installTime, Long uninstallTime, String packageName, Integer versionCode, String assetReferrer) {
    this.assetId = assetId;
    this.assetState = assetState;
    this.installTime = installTime;
    this.uninstallTime = uninstallTime;
    this.packageName = packageName;
    this.versionCode = versionCode;
    this.assetReferrer = assetReferrer;
  }

  private AssetInstallStateProto(Builder builder) {
    this(builder.assetId, builder.assetState, builder.installTime, builder.uninstallTime, builder.packageName, builder.versionCode, builder.assetReferrer);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AssetInstallStateProto)) return false;
    AssetInstallStateProto o = (AssetInstallStateProto) other;
    return equals(assetId, o.assetId)
        && equals(assetState, o.assetState)
        && equals(installTime, o.installTime)
        && equals(uninstallTime, o.uninstallTime)
        && equals(packageName, o.packageName)
        && equals(versionCode, o.versionCode)
        && equals(assetReferrer, o.assetReferrer);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = assetId != null ? assetId.hashCode() : 0;
      result = result * 37 + (assetState != null ? assetState.hashCode() : 0);
      result = result * 37 + (installTime != null ? installTime.hashCode() : 0);
      result = result * 37 + (uninstallTime != null ? uninstallTime.hashCode() : 0);
      result = result * 37 + (packageName != null ? packageName.hashCode() : 0);
      result = result * 37 + (versionCode != null ? versionCode.hashCode() : 0);
      result = result * 37 + (assetReferrer != null ? assetReferrer.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AssetInstallStateProto> {

    public String assetId;
    public Integer assetState;
    public Long installTime;
    public Long uninstallTime;
    public String packageName;
    public Integer versionCode;
    public String assetReferrer;

    public Builder() {
    }

    public Builder(AssetInstallStateProto message) {
      super(message);
      if (message == null) return;
      this.assetId = message.assetId;
      this.assetState = message.assetState;
      this.installTime = message.installTime;
      this.uninstallTime = message.uninstallTime;
      this.packageName = message.packageName;
      this.versionCode = message.versionCode;
      this.assetReferrer = message.assetReferrer;
    }

    public Builder assetId(String assetId) {
      this.assetId = assetId;
      return this;
    }

    public Builder assetState(Integer assetState) {
      this.assetState = assetState;
      return this;
    }

    public Builder installTime(Long installTime) {
      this.installTime = installTime;
      return this;
    }

    public Builder uninstallTime(Long uninstallTime) {
      this.uninstallTime = uninstallTime;
      return this;
    }

    public Builder packageName(String packageName) {
      this.packageName = packageName;
      return this;
    }

    public Builder versionCode(Integer versionCode) {
      this.versionCode = versionCode;
      return this;
    }

    public Builder assetReferrer(String assetReferrer) {
      this.assetReferrer = assetReferrer;
      return this;
    }

    @Override
    public AssetInstallStateProto build() {
      return new AssetInstallStateProto(this);
    }
  }
}
