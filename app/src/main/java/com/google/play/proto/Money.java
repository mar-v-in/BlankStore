// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Purchase.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class Money extends Message {

  public static final Long DEFAULT_MICROS = 0L;
  public static final String DEFAULT_CURRENCYCODE = "";
  public static final String DEFAULT_FORMATTEDAMOUNT = "";

  @ProtoField(tag = 1, type = INT64)
  public final Long micros;

  @ProtoField(tag = 2, type = STRING)
  public final String currencyCode;

  @ProtoField(tag = 3, type = STRING)
  public final String formattedAmount;

  public Money(Long micros, String currencyCode, String formattedAmount) {
    this.micros = micros;
    this.currencyCode = currencyCode;
    this.formattedAmount = formattedAmount;
  }

  private Money(Builder builder) {
    this(builder.micros, builder.currencyCode, builder.formattedAmount);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Money)) return false;
    Money o = (Money) other;
    return equals(micros, o.micros)
        && equals(currencyCode, o.currencyCode)
        && equals(formattedAmount, o.formattedAmount);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = micros != null ? micros.hashCode() : 0;
      result = result * 37 + (currencyCode != null ? currencyCode.hashCode() : 0);
      result = result * 37 + (formattedAmount != null ? formattedAmount.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Money> {

    public Long micros;
    public String currencyCode;
    public String formattedAmount;

    public Builder() {
    }

    public Builder(Money message) {
      super(message);
      if (message == null) return;
      this.micros = message.micros;
      this.currencyCode = message.currencyCode;
      this.formattedAmount = message.formattedAmount;
    }

    public Builder micros(Long micros) {
      this.micros = micros;
      return this;
    }

    public Builder currencyCode(String currencyCode) {
      this.currencyCode = currencyCode;
      return this;
    }

    public Builder formattedAmount(String formattedAmount) {
      this.formattedAmount = formattedAmount;
      return this;
    }

    @Override
    public Money build() {
      return new Money(this);
    }
  }
}
