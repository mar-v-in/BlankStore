// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Download.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class AndroidAppPatchData extends Message {

  public static final Integer DEFAULT_BASEVERSIONCODE = 0;
  public static final String DEFAULT_BASESIGNATURE = "";
  public static final String DEFAULT_DOWNLOADURL = "";
  public static final Integer DEFAULT_PATCHFORMAT = 0;
  public static final Long DEFAULT_MAXPATCHSIZE = 0L;

  @ProtoField(tag = 1, type = INT32)
  public final Integer baseVersionCode;

  @ProtoField(tag = 2, type = STRING)
  public final String baseSignature;

  @ProtoField(tag = 3, type = STRING)
  public final String downloadUrl;

  @ProtoField(tag = 4, type = INT32)
  public final Integer patchFormat;

  @ProtoField(tag = 5, type = INT64)
  public final Long maxPatchSize;

  public AndroidAppPatchData(Integer baseVersionCode, String baseSignature, String downloadUrl, Integer patchFormat, Long maxPatchSize) {
    this.baseVersionCode = baseVersionCode;
    this.baseSignature = baseSignature;
    this.downloadUrl = downloadUrl;
    this.patchFormat = patchFormat;
    this.maxPatchSize = maxPatchSize;
  }

  private AndroidAppPatchData(Builder builder) {
    this(builder.baseVersionCode, builder.baseSignature, builder.downloadUrl, builder.patchFormat, builder.maxPatchSize);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AndroidAppPatchData)) return false;
    AndroidAppPatchData o = (AndroidAppPatchData) other;
    return equals(baseVersionCode, o.baseVersionCode)
        && equals(baseSignature, o.baseSignature)
        && equals(downloadUrl, o.downloadUrl)
        && equals(patchFormat, o.patchFormat)
        && equals(maxPatchSize, o.maxPatchSize);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = baseVersionCode != null ? baseVersionCode.hashCode() : 0;
      result = result * 37 + (baseSignature != null ? baseSignature.hashCode() : 0);
      result = result * 37 + (downloadUrl != null ? downloadUrl.hashCode() : 0);
      result = result * 37 + (patchFormat != null ? patchFormat.hashCode() : 0);
      result = result * 37 + (maxPatchSize != null ? maxPatchSize.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AndroidAppPatchData> {

    public Integer baseVersionCode;
    public String baseSignature;
    public String downloadUrl;
    public Integer patchFormat;
    public Long maxPatchSize;

    public Builder() {
    }

    public Builder(AndroidAppPatchData message) {
      super(message);
      if (message == null) return;
      this.baseVersionCode = message.baseVersionCode;
      this.baseSignature = message.baseSignature;
      this.downloadUrl = message.downloadUrl;
      this.patchFormat = message.patchFormat;
      this.maxPatchSize = message.maxPatchSize;
    }

    public Builder baseVersionCode(Integer baseVersionCode) {
      this.baseVersionCode = baseVersionCode;
      return this;
    }

    public Builder baseSignature(String baseSignature) {
      this.baseSignature = baseSignature;
      return this;
    }

    public Builder downloadUrl(String downloadUrl) {
      this.downloadUrl = downloadUrl;
      return this;
    }

    public Builder patchFormat(Integer patchFormat) {
      this.patchFormat = patchFormat;
      return this;
    }

    public Builder maxPatchSize(Long maxPatchSize) {
      this.maxPatchSize = maxPatchSize;
      return this;
    }

    @Override
    public AndroidAppPatchData build() {
      return new AndroidAppPatchData(this);
    }
  }
}
