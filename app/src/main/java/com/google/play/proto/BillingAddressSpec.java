// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/BillingAddress.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class BillingAddressSpec extends Message {

  public static final Integer DEFAULT_BILLINGADDRESSTYPE = 0;
  public static final List<Integer> DEFAULT_REQUIREDFIELD = Collections.emptyList();

  @ProtoField(tag = 1, type = INT32)
  public final Integer billingAddressType;

  @ProtoField(tag = 2, type = INT32, label = REPEATED)
  public final List<Integer> requiredField;

  public BillingAddressSpec(Integer billingAddressType, List<Integer> requiredField) {
    this.billingAddressType = billingAddressType;
    this.requiredField = immutableCopyOf(requiredField);
  }

  private BillingAddressSpec(Builder builder) {
    this(builder.billingAddressType, builder.requiredField);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BillingAddressSpec)) return false;
    BillingAddressSpec o = (BillingAddressSpec) other;
    return equals(billingAddressType, o.billingAddressType)
        && equals(requiredField, o.requiredField);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = billingAddressType != null ? billingAddressType.hashCode() : 0;
      result = result * 37 + (requiredField != null ? requiredField.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<BillingAddressSpec> {

    public Integer billingAddressType;
    public List<Integer> requiredField;

    public Builder() {
    }

    public Builder(BillingAddressSpec message) {
      super(message);
      if (message == null) return;
      this.billingAddressType = message.billingAddressType;
      this.requiredField = copyOf(message.requiredField);
    }

    public Builder billingAddressType(Integer billingAddressType) {
      this.billingAddressType = billingAddressType;
      return this;
    }

    public Builder requiredField(List<Integer> requiredField) {
      this.requiredField = checkForNulls(requiredField);
      return this;
    }

    @Override
    public BillingAddressSpec build() {
      return new BillingAddressSpec(this);
    }
  }
}
