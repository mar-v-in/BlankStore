// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Video.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class VideoDetails extends Message {

  public static final List<VideoCredit> DEFAULT_CREDIT = Collections.emptyList();
  public static final String DEFAULT_DURATION = "";
  public static final String DEFAULT_RELEASEDATE = "";
  public static final String DEFAULT_CONTENTRATING = "";
  public static final Long DEFAULT_LIKES = 0L;
  public static final Long DEFAULT_DISLIKES = 0L;
  public static final List<String> DEFAULT_GENRE = Collections.emptyList();
  public static final List<Trailer> DEFAULT_TRAILER = Collections.emptyList();
  public static final List<VideoRentalTerm> DEFAULT_RENTALTERM = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<VideoCredit> credit;

  @ProtoField(tag = 2, type = STRING)
  public final String duration;

  @ProtoField(tag = 3, type = STRING)
  public final String releaseDate;

  @ProtoField(tag = 4, type = STRING)
  public final String contentRating;

  @ProtoField(tag = 5, type = INT64)
  public final Long likes;

  @ProtoField(tag = 6, type = INT64)
  public final Long dislikes;

  @ProtoField(tag = 7, type = STRING, label = REPEATED)
  public final List<String> genre;

  @ProtoField(tag = 8, label = REPEATED)
  public final List<Trailer> trailer;

  @ProtoField(tag = 9, label = REPEATED)
  public final List<VideoRentalTerm> rentalTerm;

  public VideoDetails(List<VideoCredit> credit, String duration, String releaseDate, String contentRating, Long likes, Long dislikes, List<String> genre, List<Trailer> trailer, List<VideoRentalTerm> rentalTerm) {
    this.credit = immutableCopyOf(credit);
    this.duration = duration;
    this.releaseDate = releaseDate;
    this.contentRating = contentRating;
    this.likes = likes;
    this.dislikes = dislikes;
    this.genre = immutableCopyOf(genre);
    this.trailer = immutableCopyOf(trailer);
    this.rentalTerm = immutableCopyOf(rentalTerm);
  }

  private VideoDetails(Builder builder) {
    this(builder.credit, builder.duration, builder.releaseDate, builder.contentRating, builder.likes, builder.dislikes, builder.genre, builder.trailer, builder.rentalTerm);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VideoDetails)) return false;
    VideoDetails o = (VideoDetails) other;
    return equals(credit, o.credit)
        && equals(duration, o.duration)
        && equals(releaseDate, o.releaseDate)
        && equals(contentRating, o.contentRating)
        && equals(likes, o.likes)
        && equals(dislikes, o.dislikes)
        && equals(genre, o.genre)
        && equals(trailer, o.trailer)
        && equals(rentalTerm, o.rentalTerm);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = credit != null ? credit.hashCode() : 1;
      result = result * 37 + (duration != null ? duration.hashCode() : 0);
      result = result * 37 + (releaseDate != null ? releaseDate.hashCode() : 0);
      result = result * 37 + (contentRating != null ? contentRating.hashCode() : 0);
      result = result * 37 + (likes != null ? likes.hashCode() : 0);
      result = result * 37 + (dislikes != null ? dislikes.hashCode() : 0);
      result = result * 37 + (genre != null ? genre.hashCode() : 1);
      result = result * 37 + (trailer != null ? trailer.hashCode() : 1);
      result = result * 37 + (rentalTerm != null ? rentalTerm.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<VideoDetails> {

    public List<VideoCredit> credit;
    public String duration;
    public String releaseDate;
    public String contentRating;
    public Long likes;
    public Long dislikes;
    public List<String> genre;
    public List<Trailer> trailer;
    public List<VideoRentalTerm> rentalTerm;

    public Builder() {
    }

    public Builder(VideoDetails message) {
      super(message);
      if (message == null) return;
      this.credit = copyOf(message.credit);
      this.duration = message.duration;
      this.releaseDate = message.releaseDate;
      this.contentRating = message.contentRating;
      this.likes = message.likes;
      this.dislikes = message.dislikes;
      this.genre = copyOf(message.genre);
      this.trailer = copyOf(message.trailer);
      this.rentalTerm = copyOf(message.rentalTerm);
    }

    public Builder credit(List<VideoCredit> credit) {
      this.credit = checkForNulls(credit);
      return this;
    }

    public Builder duration(String duration) {
      this.duration = duration;
      return this;
    }

    public Builder releaseDate(String releaseDate) {
      this.releaseDate = releaseDate;
      return this;
    }

    public Builder contentRating(String contentRating) {
      this.contentRating = contentRating;
      return this;
    }

    public Builder likes(Long likes) {
      this.likes = likes;
      return this;
    }

    public Builder dislikes(Long dislikes) {
      this.dislikes = dislikes;
      return this;
    }

    public Builder genre(List<String> genre) {
      this.genre = checkForNulls(genre);
      return this;
    }

    public Builder trailer(List<Trailer> trailer) {
      this.trailer = checkForNulls(trailer);
      return this;
    }

    public Builder rentalTerm(List<VideoRentalTerm> rentalTerm) {
      this.rentalTerm = checkForNulls(rentalTerm);
      return this;
    }

    @Override
    public VideoDetails build() {
      return new VideoDetails(this);
    }
  }
}
