// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Rating.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class AggregateRating extends Message {

  public static final Integer DEFAULT_TYPE = 0;
  public static final Float DEFAULT_STARRATING = 0F;
  public static final Long DEFAULT_RATINGSCOUNT = 0L;
  public static final Long DEFAULT_ONESTARRATINGS = 0L;
  public static final Long DEFAULT_TWOSTARRATINGS = 0L;
  public static final Long DEFAULT_THREESTARRATINGS = 0L;
  public static final Long DEFAULT_FOURSTARRATINGS = 0L;
  public static final Long DEFAULT_FIVESTARRATINGS = 0L;
  public static final Long DEFAULT_THUMBSUPCOUNT = 0L;
  public static final Long DEFAULT_THUMBSDOWNCOUNT = 0L;
  public static final Long DEFAULT_COMMENTCOUNT = 0L;
  public static final Double DEFAULT_BAYESIANMEANRATING = 0D;

  @ProtoField(tag = 1, type = INT32)
  public final Integer type;

  @ProtoField(tag = 2, type = FLOAT)
  public final Float starRating;

  @ProtoField(tag = 3, type = UINT64)
  public final Long ratingsCount;

  @ProtoField(tag = 4, type = UINT64)
  public final Long oneStarRatings;

  @ProtoField(tag = 5, type = UINT64)
  public final Long twoStarRatings;

  @ProtoField(tag = 6, type = UINT64)
  public final Long threeStarRatings;

  @ProtoField(tag = 7, type = UINT64)
  public final Long fourStarRatings;

  @ProtoField(tag = 8, type = UINT64)
  public final Long fiveStarRatings;

  @ProtoField(tag = 9, type = UINT64)
  public final Long thumbsUpCount;

  @ProtoField(tag = 10, type = UINT64)
  public final Long thumbsDownCount;

  @ProtoField(tag = 11, type = UINT64)
  public final Long commentCount;

  @ProtoField(tag = 12, type = DOUBLE)
  public final Double bayesianMeanRating;

  public AggregateRating(Integer type, Float starRating, Long ratingsCount, Long oneStarRatings, Long twoStarRatings, Long threeStarRatings, Long fourStarRatings, Long fiveStarRatings, Long thumbsUpCount, Long thumbsDownCount, Long commentCount, Double bayesianMeanRating) {
    this.type = type;
    this.starRating = starRating;
    this.ratingsCount = ratingsCount;
    this.oneStarRatings = oneStarRatings;
    this.twoStarRatings = twoStarRatings;
    this.threeStarRatings = threeStarRatings;
    this.fourStarRatings = fourStarRatings;
    this.fiveStarRatings = fiveStarRatings;
    this.thumbsUpCount = thumbsUpCount;
    this.thumbsDownCount = thumbsDownCount;
    this.commentCount = commentCount;
    this.bayesianMeanRating = bayesianMeanRating;
  }

  private AggregateRating(Builder builder) {
    this(builder.type, builder.starRating, builder.ratingsCount, builder.oneStarRatings, builder.twoStarRatings, builder.threeStarRatings, builder.fourStarRatings, builder.fiveStarRatings, builder.thumbsUpCount, builder.thumbsDownCount, builder.commentCount, builder.bayesianMeanRating);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AggregateRating)) return false;
    AggregateRating o = (AggregateRating) other;
    return equals(type, o.type)
        && equals(starRating, o.starRating)
        && equals(ratingsCount, o.ratingsCount)
        && equals(oneStarRatings, o.oneStarRatings)
        && equals(twoStarRatings, o.twoStarRatings)
        && equals(threeStarRatings, o.threeStarRatings)
        && equals(fourStarRatings, o.fourStarRatings)
        && equals(fiveStarRatings, o.fiveStarRatings)
        && equals(thumbsUpCount, o.thumbsUpCount)
        && equals(thumbsDownCount, o.thumbsDownCount)
        && equals(commentCount, o.commentCount)
        && equals(bayesianMeanRating, o.bayesianMeanRating);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = type != null ? type.hashCode() : 0;
      result = result * 37 + (starRating != null ? starRating.hashCode() : 0);
      result = result * 37 + (ratingsCount != null ? ratingsCount.hashCode() : 0);
      result = result * 37 + (oneStarRatings != null ? oneStarRatings.hashCode() : 0);
      result = result * 37 + (twoStarRatings != null ? twoStarRatings.hashCode() : 0);
      result = result * 37 + (threeStarRatings != null ? threeStarRatings.hashCode() : 0);
      result = result * 37 + (fourStarRatings != null ? fourStarRatings.hashCode() : 0);
      result = result * 37 + (fiveStarRatings != null ? fiveStarRatings.hashCode() : 0);
      result = result * 37 + (thumbsUpCount != null ? thumbsUpCount.hashCode() : 0);
      result = result * 37 + (thumbsDownCount != null ? thumbsDownCount.hashCode() : 0);
      result = result * 37 + (commentCount != null ? commentCount.hashCode() : 0);
      result = result * 37 + (bayesianMeanRating != null ? bayesianMeanRating.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AggregateRating> {

    public Integer type;
    public Float starRating;
    public Long ratingsCount;
    public Long oneStarRatings;
    public Long twoStarRatings;
    public Long threeStarRatings;
    public Long fourStarRatings;
    public Long fiveStarRatings;
    public Long thumbsUpCount;
    public Long thumbsDownCount;
    public Long commentCount;
    public Double bayesianMeanRating;

    public Builder() {
    }

    public Builder(AggregateRating message) {
      super(message);
      if (message == null) return;
      this.type = message.type;
      this.starRating = message.starRating;
      this.ratingsCount = message.ratingsCount;
      this.oneStarRatings = message.oneStarRatings;
      this.twoStarRatings = message.twoStarRatings;
      this.threeStarRatings = message.threeStarRatings;
      this.fourStarRatings = message.fourStarRatings;
      this.fiveStarRatings = message.fiveStarRatings;
      this.thumbsUpCount = message.thumbsUpCount;
      this.thumbsDownCount = message.thumbsDownCount;
      this.commentCount = message.commentCount;
      this.bayesianMeanRating = message.bayesianMeanRating;
    }

    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    public Builder starRating(Float starRating) {
      this.starRating = starRating;
      return this;
    }

    public Builder ratingsCount(Long ratingsCount) {
      this.ratingsCount = ratingsCount;
      return this;
    }

    public Builder oneStarRatings(Long oneStarRatings) {
      this.oneStarRatings = oneStarRatings;
      return this;
    }

    public Builder twoStarRatings(Long twoStarRatings) {
      this.twoStarRatings = twoStarRatings;
      return this;
    }

    public Builder threeStarRatings(Long threeStarRatings) {
      this.threeStarRatings = threeStarRatings;
      return this;
    }

    public Builder fourStarRatings(Long fourStarRatings) {
      this.fourStarRatings = fourStarRatings;
      return this;
    }

    public Builder fiveStarRatings(Long fiveStarRatings) {
      this.fiveStarRatings = fiveStarRatings;
      return this;
    }

    public Builder thumbsUpCount(Long thumbsUpCount) {
      this.thumbsUpCount = thumbsUpCount;
      return this;
    }

    public Builder thumbsDownCount(Long thumbsDownCount) {
      this.thumbsDownCount = thumbsDownCount;
      return this;
    }

    public Builder commentCount(Long commentCount) {
      this.commentCount = commentCount;
      return this;
    }

    public Builder bayesianMeanRating(Double bayesianMeanRating) {
      this.bayesianMeanRating = bayesianMeanRating;
      return this;
    }

    @Override
    public AggregateRating build() {
      return new AggregateRating(this);
    }
  }
}
