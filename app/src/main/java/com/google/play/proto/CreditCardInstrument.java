// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/CreditCard.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class CreditCardInstrument extends Message {

  public static final Integer DEFAULT_TYPE = 0;
  public static final String DEFAULT_ESCROWHANDLE = "";
  public static final String DEFAULT_LASTDIGITS = "";
  public static final Integer DEFAULT_EXPIRATIONMONTH = 0;
  public static final Integer DEFAULT_EXPIRATIONYEAR = 0;
  public static final List<EfeParam> DEFAULT_ESCROWEFEPARAM = Collections.emptyList();

  @ProtoField(tag = 1, type = INT32)
  public final Integer type;

  @ProtoField(tag = 2, type = STRING)
  public final String escrowHandle;

  @ProtoField(tag = 3, type = STRING)
  public final String lastDigits;

  @ProtoField(tag = 4, type = INT32)
  public final Integer expirationMonth;

  @ProtoField(tag = 5, type = INT32)
  public final Integer expirationYear;

  @ProtoField(tag = 6, label = REPEATED)
  public final List<EfeParam> escrowEfeParam;

  public CreditCardInstrument(Integer type, String escrowHandle, String lastDigits, Integer expirationMonth, Integer expirationYear, List<EfeParam> escrowEfeParam) {
    this.type = type;
    this.escrowHandle = escrowHandle;
    this.lastDigits = lastDigits;
    this.expirationMonth = expirationMonth;
    this.expirationYear = expirationYear;
    this.escrowEfeParam = immutableCopyOf(escrowEfeParam);
  }

  private CreditCardInstrument(Builder builder) {
    this(builder.type, builder.escrowHandle, builder.lastDigits, builder.expirationMonth, builder.expirationYear, builder.escrowEfeParam);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CreditCardInstrument)) return false;
    CreditCardInstrument o = (CreditCardInstrument) other;
    return equals(type, o.type)
        && equals(escrowHandle, o.escrowHandle)
        && equals(lastDigits, o.lastDigits)
        && equals(expirationMonth, o.expirationMonth)
        && equals(expirationYear, o.expirationYear)
        && equals(escrowEfeParam, o.escrowEfeParam);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = type != null ? type.hashCode() : 0;
      result = result * 37 + (escrowHandle != null ? escrowHandle.hashCode() : 0);
      result = result * 37 + (lastDigits != null ? lastDigits.hashCode() : 0);
      result = result * 37 + (expirationMonth != null ? expirationMonth.hashCode() : 0);
      result = result * 37 + (expirationYear != null ? expirationYear.hashCode() : 0);
      result = result * 37 + (escrowEfeParam != null ? escrowEfeParam.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CreditCardInstrument> {

    public Integer type;
    public String escrowHandle;
    public String lastDigits;
    public Integer expirationMonth;
    public Integer expirationYear;
    public List<EfeParam> escrowEfeParam;

    public Builder() {
    }

    public Builder(CreditCardInstrument message) {
      super(message);
      if (message == null) return;
      this.type = message.type;
      this.escrowHandle = message.escrowHandle;
      this.lastDigits = message.lastDigits;
      this.expirationMonth = message.expirationMonth;
      this.expirationYear = message.expirationYear;
      this.escrowEfeParam = copyOf(message.escrowEfeParam);
    }

    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    public Builder escrowHandle(String escrowHandle) {
      this.escrowHandle = escrowHandle;
      return this;
    }

    public Builder lastDigits(String lastDigits) {
      this.lastDigits = lastDigits;
      return this;
    }

    public Builder expirationMonth(Integer expirationMonth) {
      this.expirationMonth = expirationMonth;
      return this;
    }

    public Builder expirationYear(Integer expirationYear) {
      this.expirationYear = expirationYear;
      return this;
    }

    public Builder escrowEfeParam(List<EfeParam> escrowEfeParam) {
      this.escrowEfeParam = checkForNulls(escrowEfeParam);
      return this;
    }

    @Override
    public CreditCardInstrument build() {
      return new CreditCardInstrument(this);
    }
  }
}
