// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Challenges.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class InputValidationError extends Message {

  public static final Integer DEFAULT_INPUTFIELD = 0;
  public static final String DEFAULT_ERRORMESSAGE = "";

  @ProtoField(tag = 1, type = INT32)
  public final Integer inputField;

  @ProtoField(tag = 2, type = STRING)
  public final String errorMessage;

  public InputValidationError(Integer inputField, String errorMessage) {
    this.inputField = inputField;
    this.errorMessage = errorMessage;
  }

  private InputValidationError(Builder builder) {
    this(builder.inputField, builder.errorMessage);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InputValidationError)) return false;
    InputValidationError o = (InputValidationError) other;
    return equals(inputField, o.inputField)
        && equals(errorMessage, o.errorMessage);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = inputField != null ? inputField.hashCode() : 0;
      result = result * 37 + (errorMessage != null ? errorMessage.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<InputValidationError> {

    public Integer inputField;
    public String errorMessage;

    public Builder() {
    }

    public Builder(InputValidationError message) {
      super(message);
      if (message == null) return;
      this.inputField = message.inputField;
      this.errorMessage = message.errorMessage;
    }

    public Builder inputField(Integer inputField) {
      this.inputField = inputField;
      return this;
    }

    public Builder errorMessage(String errorMessage) {
      this.errorMessage = errorMessage;
      return this;
    }

    @Override
    public InputValidationError build() {
      return new InputValidationError(this);
    }
  }
}
