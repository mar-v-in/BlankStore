// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Download.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;

public final class FileMetadata extends Message {

  public static final Integer DEFAULT_FILETYPE = 0;
  public static final Integer DEFAULT_VERSIONCODE = 0;
  public static final Long DEFAULT_SIZE = 0L;

  @ProtoField(tag = 1, type = INT32)
  public final Integer fileType;

  @ProtoField(tag = 2, type = INT32)
  public final Integer versionCode;

  @ProtoField(tag = 3, type = INT64)
  public final Long size;

  public FileMetadata(Integer fileType, Integer versionCode, Long size) {
    this.fileType = fileType;
    this.versionCode = versionCode;
    this.size = size;
  }

  private FileMetadata(Builder builder) {
    this(builder.fileType, builder.versionCode, builder.size);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FileMetadata)) return false;
    FileMetadata o = (FileMetadata) other;
    return equals(fileType, o.fileType)
        && equals(versionCode, o.versionCode)
        && equals(size, o.size);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = fileType != null ? fileType.hashCode() : 0;
      result = result * 37 + (versionCode != null ? versionCode.hashCode() : 0);
      result = result * 37 + (size != null ? size.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<FileMetadata> {

    public Integer fileType;
    public Integer versionCode;
    public Long size;

    public Builder() {
    }

    public Builder(FileMetadata message) {
      super(message);
      if (message == null) return;
      this.fileType = message.fileType;
      this.versionCode = message.versionCode;
      this.size = message.size;
    }

    public Builder fileType(Integer fileType) {
      this.fileType = fileType;
      return this;
    }

    public Builder versionCode(Integer versionCode) {
      this.versionCode = versionCode;
      return this;
    }

    public Builder size(Long size) {
      this.size = size;
      return this;
    }

    @Override
    public FileMetadata build() {
      return new FileMetadata(this);
    }
  }
}
