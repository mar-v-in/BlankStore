// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Purchase.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;

public final class InstrumentAddressSpecProto extends Message {

  public static final Integer DEFAULT_INSTRUMENTFAMILY = 0;

  @ProtoField(tag = 8, type = INT32)
  public final Integer instrumentFamily;

  @ProtoField(tag = 9)
  public final BillingAddressSpec billingAddressSpec;

  public InstrumentAddressSpecProto(Integer instrumentFamily, BillingAddressSpec billingAddressSpec) {
    this.instrumentFamily = instrumentFamily;
    this.billingAddressSpec = billingAddressSpec;
  }

  private InstrumentAddressSpecProto(Builder builder) {
    this(builder.instrumentFamily, builder.billingAddressSpec);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InstrumentAddressSpecProto)) return false;
    InstrumentAddressSpecProto o = (InstrumentAddressSpecProto) other;
    return equals(instrumentFamily, o.instrumentFamily)
        && equals(billingAddressSpec, o.billingAddressSpec);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = instrumentFamily != null ? instrumentFamily.hashCode() : 0;
      result = result * 37 + (billingAddressSpec != null ? billingAddressSpec.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<InstrumentAddressSpecProto> {

    public Integer instrumentFamily;
    public BillingAddressSpec billingAddressSpec;

    public Builder() {
    }

    public Builder(InstrumentAddressSpecProto message) {
      super(message);
      if (message == null) return;
      this.instrumentFamily = message.instrumentFamily;
      this.billingAddressSpec = message.billingAddressSpec;
    }

    public Builder instrumentFamily(Integer instrumentFamily) {
      this.instrumentFamily = instrumentFamily;
      return this;
    }

    public Builder billingAddressSpec(BillingAddressSpec billingAddressSpec) {
      this.billingAddressSpec = billingAddressSpec;
      return this;
    }

    @Override
    public InstrumentAddressSpecProto build() {
      return new InstrumentAddressSpecProto(this);
    }
  }
}
