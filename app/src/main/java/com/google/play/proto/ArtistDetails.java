// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Music.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;

public final class ArtistDetails extends Message {

  public static final String DEFAULT_DETAILSURL = "";
  public static final String DEFAULT_NAME = "";

  @ProtoField(tag = 1, type = STRING)
  public final String detailsUrl;

  @ProtoField(tag = 2, type = STRING)
  public final String name;

  @ProtoField(tag = 3)
  public final ArtistExternalLinks externalLinks;

  public ArtistDetails(String detailsUrl, String name, ArtistExternalLinks externalLinks) {
    this.detailsUrl = detailsUrl;
    this.name = name;
    this.externalLinks = externalLinks;
  }

  private ArtistDetails(Builder builder) {
    this(builder.detailsUrl, builder.name, builder.externalLinks);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ArtistDetails)) return false;
    ArtistDetails o = (ArtistDetails) other;
    return equals(detailsUrl, o.detailsUrl)
        && equals(name, o.name)
        && equals(externalLinks, o.externalLinks);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = detailsUrl != null ? detailsUrl.hashCode() : 0;
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (externalLinks != null ? externalLinks.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ArtistDetails> {

    public String detailsUrl;
    public String name;
    public ArtistExternalLinks externalLinks;

    public Builder() {
    }

    public Builder(ArtistDetails message) {
      super(message);
      if (message == null) return;
      this.detailsUrl = message.detailsUrl;
      this.name = message.name;
      this.externalLinks = message.externalLinks;
    }

    public Builder detailsUrl(String detailsUrl) {
      this.detailsUrl = detailsUrl;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder externalLinks(ArtistExternalLinks externalLinks) {
      this.externalLinks = externalLinks;
      return this;
    }

    @Override
    public ArtistDetails build() {
      return new ArtistDetails(this);
    }
  }
}
