// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Unsorted.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class CheckLicenseResponseProto extends Message {

  public static final Integer DEFAULT_RESPONSECODE = 0;
  public static final String DEFAULT_SIGNEDDATA = "";
  public static final String DEFAULT_SIGNATURE = "";

  @ProtoField(tag = 1, type = INT32)
  public final Integer responseCode;

  @ProtoField(tag = 2, type = STRING)
  public final String signedData;

  @ProtoField(tag = 3, type = STRING)
  public final String signature;

  public CheckLicenseResponseProto(Integer responseCode, String signedData, String signature) {
    this.responseCode = responseCode;
    this.signedData = signedData;
    this.signature = signature;
  }

  private CheckLicenseResponseProto(Builder builder) {
    this(builder.responseCode, builder.signedData, builder.signature);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CheckLicenseResponseProto)) return false;
    CheckLicenseResponseProto o = (CheckLicenseResponseProto) other;
    return equals(responseCode, o.responseCode)
        && equals(signedData, o.signedData)
        && equals(signature, o.signature);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = responseCode != null ? responseCode.hashCode() : 0;
      result = result * 37 + (signedData != null ? signedData.hashCode() : 0);
      result = result * 37 + (signature != null ? signature.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CheckLicenseResponseProto> {

    public Integer responseCode;
    public String signedData;
    public String signature;

    public Builder() {
    }

    public Builder(CheckLicenseResponseProto message) {
      super(message);
      if (message == null) return;
      this.responseCode = message.responseCode;
      this.signedData = message.signedData;
      this.signature = message.signature;
    }

    public Builder responseCode(Integer responseCode) {
      this.responseCode = responseCode;
      return this;
    }

    public Builder signedData(String signedData) {
      this.signedData = signedData;
      return this;
    }

    public Builder signature(String signature) {
      this.signature = signature;
      return this;
    }

    @Override
    public CheckLicenseResponseProto build() {
      return new CheckLicenseResponseProto(this);
    }
  }
}
