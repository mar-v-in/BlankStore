// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Purchase.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class CountryProto extends Message {

  public static final String DEFAULT_COUNTRYCODE = "";
  public static final String DEFAULT_COUNTRYNAME = "";
  public static final Boolean DEFAULT_ALLOWSREDUCEDBILLINGADDRESS = false;
  public static final List<InstrumentAddressSpecProto> DEFAULT_INSTRUMENTADDRESSSPEC = Collections.emptyList();

  @ProtoField(tag = 3, type = STRING)
  public final String countryCode;

  @ProtoField(tag = 4, type = STRING)
  public final String countryName;

  @ProtoField(tag = 5)
  public final PaypalCountryInfoProto paypalCountryInfo;

  @ProtoField(tag = 6, type = BOOL)
  public final Boolean allowsReducedBillingAddress;

  @ProtoField(tag = 7, label = REPEATED)
  public final List<InstrumentAddressSpecProto> instrumentAddressSpec;

  public CountryProto(String countryCode, String countryName, PaypalCountryInfoProto paypalCountryInfo, Boolean allowsReducedBillingAddress, List<InstrumentAddressSpecProto> instrumentAddressSpec) {
    this.countryCode = countryCode;
    this.countryName = countryName;
    this.paypalCountryInfo = paypalCountryInfo;
    this.allowsReducedBillingAddress = allowsReducedBillingAddress;
    this.instrumentAddressSpec = immutableCopyOf(instrumentAddressSpec);
  }

  private CountryProto(Builder builder) {
    this(builder.countryCode, builder.countryName, builder.paypalCountryInfo, builder.allowsReducedBillingAddress, builder.instrumentAddressSpec);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CountryProto)) return false;
    CountryProto o = (CountryProto) other;
    return equals(countryCode, o.countryCode)
        && equals(countryName, o.countryName)
        && equals(paypalCountryInfo, o.paypalCountryInfo)
        && equals(allowsReducedBillingAddress, o.allowsReducedBillingAddress)
        && equals(instrumentAddressSpec, o.instrumentAddressSpec);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = countryCode != null ? countryCode.hashCode() : 0;
      result = result * 37 + (countryName != null ? countryName.hashCode() : 0);
      result = result * 37 + (paypalCountryInfo != null ? paypalCountryInfo.hashCode() : 0);
      result = result * 37 + (allowsReducedBillingAddress != null ? allowsReducedBillingAddress.hashCode() : 0);
      result = result * 37 + (instrumentAddressSpec != null ? instrumentAddressSpec.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CountryProto> {

    public String countryCode;
    public String countryName;
    public PaypalCountryInfoProto paypalCountryInfo;
    public Boolean allowsReducedBillingAddress;
    public List<InstrumentAddressSpecProto> instrumentAddressSpec;

    public Builder() {
    }

    public Builder(CountryProto message) {
      super(message);
      if (message == null) return;
      this.countryCode = message.countryCode;
      this.countryName = message.countryName;
      this.paypalCountryInfo = message.paypalCountryInfo;
      this.allowsReducedBillingAddress = message.allowsReducedBillingAddress;
      this.instrumentAddressSpec = copyOf(message.instrumentAddressSpec);
    }

    public Builder countryCode(String countryCode) {
      this.countryCode = countryCode;
      return this;
    }

    public Builder countryName(String countryName) {
      this.countryName = countryName;
      return this;
    }

    public Builder paypalCountryInfo(PaypalCountryInfoProto paypalCountryInfo) {
      this.paypalCountryInfo = paypalCountryInfo;
      return this;
    }

    public Builder allowsReducedBillingAddress(Boolean allowsReducedBillingAddress) {
      this.allowsReducedBillingAddress = allowsReducedBillingAddress;
      return this;
    }

    public Builder instrumentAddressSpec(List<InstrumentAddressSpecProto> instrumentAddressSpec) {
      this.instrumentAddressSpec = checkForNulls(instrumentAddressSpec);
      return this;
    }

    @Override
    public CountryProto build() {
      return new CountryProto(this);
    }
  }
}
