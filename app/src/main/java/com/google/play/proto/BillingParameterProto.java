// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Billing.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class BillingParameterProto extends Message {

  public static final String DEFAULT_ID = "";
  public static final String DEFAULT_NAME = "";
  public static final List<String> DEFAULT_MNCMCC = Collections.emptyList();
  public static final List<String> DEFAULT_BACKENDURL = Collections.emptyList();
  public static final String DEFAULT_ICONID = "";
  public static final Integer DEFAULT_BILLINGINSTRUMENTTYPE = 0;
  public static final String DEFAULT_APPLICATIONID = "";
  public static final String DEFAULT_TOSURL = "";
  public static final Boolean DEFAULT_INSTRUMENTTOSREQUIRED = false;
  public static final Integer DEFAULT_APIVERSION = 0;
  public static final Boolean DEFAULT_PERTRANSACTIONCREDENTIALSREQUIRED = false;
  public static final Boolean DEFAULT_SENDSUBSCRIBERIDWITHCARRIERBILLINGREQUESTS = false;
  public static final Integer DEFAULT_DEVICEASSOCIATIONMETHOD = 0;
  public static final String DEFAULT_USERTOKENREQUESTMESSAGE = "";
  public static final String DEFAULT_USERTOKENREQUESTADDRESS = "";
  public static final Boolean DEFAULT_PASSPHRASEREQUIRED = false;

  @ProtoField(tag = 1, type = STRING)
  public final String id;

  @ProtoField(tag = 2, type = STRING)
  public final String name;

  @ProtoField(tag = 3, type = STRING, label = REPEATED)
  public final List<String> mncMcc;

  @ProtoField(tag = 4, type = STRING, label = REPEATED)
  public final List<String> backendUrl;

  @ProtoField(tag = 5, type = STRING)
  public final String iconId;

  @ProtoField(tag = 6, type = INT32)
  public final Integer billingInstrumentType;

  @ProtoField(tag = 7, type = STRING)
  public final String applicationId;

  @ProtoField(tag = 8, type = STRING)
  public final String tosUrl;

  @ProtoField(tag = 9, type = BOOL)
  public final Boolean instrumentTosRequired;

  @ProtoField(tag = 10, type = INT32)
  public final Integer apiVersion;

  @ProtoField(tag = 11, type = BOOL)
  public final Boolean perTransactionCredentialsRequired;

  @ProtoField(tag = 12, type = BOOL)
  public final Boolean sendSubscriberIdWithCarrierBillingRequests;

  @ProtoField(tag = 13, type = INT32)
  public final Integer deviceAssociationMethod;

  @ProtoField(tag = 14, type = STRING)
  public final String userTokenRequestMessage;

  @ProtoField(tag = 15, type = STRING)
  public final String userTokenRequestAddress;

  @ProtoField(tag = 16, type = BOOL)
  public final Boolean passphraseRequired;

  public BillingParameterProto(String id, String name, List<String> mncMcc, List<String> backendUrl, String iconId, Integer billingInstrumentType, String applicationId, String tosUrl, Boolean instrumentTosRequired, Integer apiVersion, Boolean perTransactionCredentialsRequired, Boolean sendSubscriberIdWithCarrierBillingRequests, Integer deviceAssociationMethod, String userTokenRequestMessage, String userTokenRequestAddress, Boolean passphraseRequired) {
    this.id = id;
    this.name = name;
    this.mncMcc = immutableCopyOf(mncMcc);
    this.backendUrl = immutableCopyOf(backendUrl);
    this.iconId = iconId;
    this.billingInstrumentType = billingInstrumentType;
    this.applicationId = applicationId;
    this.tosUrl = tosUrl;
    this.instrumentTosRequired = instrumentTosRequired;
    this.apiVersion = apiVersion;
    this.perTransactionCredentialsRequired = perTransactionCredentialsRequired;
    this.sendSubscriberIdWithCarrierBillingRequests = sendSubscriberIdWithCarrierBillingRequests;
    this.deviceAssociationMethod = deviceAssociationMethod;
    this.userTokenRequestMessage = userTokenRequestMessage;
    this.userTokenRequestAddress = userTokenRequestAddress;
    this.passphraseRequired = passphraseRequired;
  }

  private BillingParameterProto(Builder builder) {
    this(builder.id, builder.name, builder.mncMcc, builder.backendUrl, builder.iconId, builder.billingInstrumentType, builder.applicationId, builder.tosUrl, builder.instrumentTosRequired, builder.apiVersion, builder.perTransactionCredentialsRequired, builder.sendSubscriberIdWithCarrierBillingRequests, builder.deviceAssociationMethod, builder.userTokenRequestMessage, builder.userTokenRequestAddress, builder.passphraseRequired);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BillingParameterProto)) return false;
    BillingParameterProto o = (BillingParameterProto) other;
    return equals(id, o.id)
        && equals(name, o.name)
        && equals(mncMcc, o.mncMcc)
        && equals(backendUrl, o.backendUrl)
        && equals(iconId, o.iconId)
        && equals(billingInstrumentType, o.billingInstrumentType)
        && equals(applicationId, o.applicationId)
        && equals(tosUrl, o.tosUrl)
        && equals(instrumentTosRequired, o.instrumentTosRequired)
        && equals(apiVersion, o.apiVersion)
        && equals(perTransactionCredentialsRequired, o.perTransactionCredentialsRequired)
        && equals(sendSubscriberIdWithCarrierBillingRequests, o.sendSubscriberIdWithCarrierBillingRequests)
        && equals(deviceAssociationMethod, o.deviceAssociationMethod)
        && equals(userTokenRequestMessage, o.userTokenRequestMessage)
        && equals(userTokenRequestAddress, o.userTokenRequestAddress)
        && equals(passphraseRequired, o.passphraseRequired);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (mncMcc != null ? mncMcc.hashCode() : 1);
      result = result * 37 + (backendUrl != null ? backendUrl.hashCode() : 1);
      result = result * 37 + (iconId != null ? iconId.hashCode() : 0);
      result = result * 37 + (billingInstrumentType != null ? billingInstrumentType.hashCode() : 0);
      result = result * 37 + (applicationId != null ? applicationId.hashCode() : 0);
      result = result * 37 + (tosUrl != null ? tosUrl.hashCode() : 0);
      result = result * 37 + (instrumentTosRequired != null ? instrumentTosRequired.hashCode() : 0);
      result = result * 37 + (apiVersion != null ? apiVersion.hashCode() : 0);
      result = result * 37 + (perTransactionCredentialsRequired != null ? perTransactionCredentialsRequired.hashCode() : 0);
      result = result * 37 + (sendSubscriberIdWithCarrierBillingRequests != null ? sendSubscriberIdWithCarrierBillingRequests.hashCode() : 0);
      result = result * 37 + (deviceAssociationMethod != null ? deviceAssociationMethod.hashCode() : 0);
      result = result * 37 + (userTokenRequestMessage != null ? userTokenRequestMessage.hashCode() : 0);
      result = result * 37 + (userTokenRequestAddress != null ? userTokenRequestAddress.hashCode() : 0);
      result = result * 37 + (passphraseRequired != null ? passphraseRequired.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<BillingParameterProto> {

    public String id;
    public String name;
    public List<String> mncMcc;
    public List<String> backendUrl;
    public String iconId;
    public Integer billingInstrumentType;
    public String applicationId;
    public String tosUrl;
    public Boolean instrumentTosRequired;
    public Integer apiVersion;
    public Boolean perTransactionCredentialsRequired;
    public Boolean sendSubscriberIdWithCarrierBillingRequests;
    public Integer deviceAssociationMethod;
    public String userTokenRequestMessage;
    public String userTokenRequestAddress;
    public Boolean passphraseRequired;

    public Builder() {
    }

    public Builder(BillingParameterProto message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.name = message.name;
      this.mncMcc = copyOf(message.mncMcc);
      this.backendUrl = copyOf(message.backendUrl);
      this.iconId = message.iconId;
      this.billingInstrumentType = message.billingInstrumentType;
      this.applicationId = message.applicationId;
      this.tosUrl = message.tosUrl;
      this.instrumentTosRequired = message.instrumentTosRequired;
      this.apiVersion = message.apiVersion;
      this.perTransactionCredentialsRequired = message.perTransactionCredentialsRequired;
      this.sendSubscriberIdWithCarrierBillingRequests = message.sendSubscriberIdWithCarrierBillingRequests;
      this.deviceAssociationMethod = message.deviceAssociationMethod;
      this.userTokenRequestMessage = message.userTokenRequestMessage;
      this.userTokenRequestAddress = message.userTokenRequestAddress;
      this.passphraseRequired = message.passphraseRequired;
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder mncMcc(List<String> mncMcc) {
      this.mncMcc = checkForNulls(mncMcc);
      return this;
    }

    public Builder backendUrl(List<String> backendUrl) {
      this.backendUrl = checkForNulls(backendUrl);
      return this;
    }

    public Builder iconId(String iconId) {
      this.iconId = iconId;
      return this;
    }

    public Builder billingInstrumentType(Integer billingInstrumentType) {
      this.billingInstrumentType = billingInstrumentType;
      return this;
    }

    public Builder applicationId(String applicationId) {
      this.applicationId = applicationId;
      return this;
    }

    public Builder tosUrl(String tosUrl) {
      this.tosUrl = tosUrl;
      return this;
    }

    public Builder instrumentTosRequired(Boolean instrumentTosRequired) {
      this.instrumentTosRequired = instrumentTosRequired;
      return this;
    }

    public Builder apiVersion(Integer apiVersion) {
      this.apiVersion = apiVersion;
      return this;
    }

    public Builder perTransactionCredentialsRequired(Boolean perTransactionCredentialsRequired) {
      this.perTransactionCredentialsRequired = perTransactionCredentialsRequired;
      return this;
    }

    public Builder sendSubscriberIdWithCarrierBillingRequests(Boolean sendSubscriberIdWithCarrierBillingRequests) {
      this.sendSubscriberIdWithCarrierBillingRequests = sendSubscriberIdWithCarrierBillingRequests;
      return this;
    }

    public Builder deviceAssociationMethod(Integer deviceAssociationMethod) {
      this.deviceAssociationMethod = deviceAssociationMethod;
      return this;
    }

    public Builder userTokenRequestMessage(String userTokenRequestMessage) {
      this.userTokenRequestMessage = userTokenRequestMessage;
      return this;
    }

    public Builder userTokenRequestAddress(String userTokenRequestAddress) {
      this.userTokenRequestAddress = userTokenRequestAddress;
      return this;
    }

    public Builder passphraseRequired(Boolean passphraseRequired) {
      this.passphraseRequired = passphraseRequired;
      return this;
    }

    @Override
    public BillingParameterProto build() {
      return new BillingParameterProto(this);
    }
  }
}
