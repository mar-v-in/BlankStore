// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Category.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class CategoryProto extends Message {

  public static final Integer DEFAULT_ASSETTYPE = 0;
  public static final String DEFAULT_CATEGORYID = "";
  public static final String DEFAULT_CATEGORYDISPLAY = "";
  public static final String DEFAULT_CATEGORYSUBTITLE = "";
  public static final List<String> DEFAULT_PROMOTEDASSETSNEW = Collections.emptyList();
  public static final List<String> DEFAULT_PROMOTEDASSETSHOME = Collections.emptyList();
  public static final List<CategoryProto> DEFAULT_SUBCATEGORIES = Collections.emptyList();
  public static final List<String> DEFAULT_PROMOTEDASSETSPAID = Collections.emptyList();
  public static final List<String> DEFAULT_PROMOTEDASSETSFREE = Collections.emptyList();

  @ProtoField(tag = 2, type = INT32)
  public final Integer assetType;

  @ProtoField(tag = 3, type = STRING)
  public final String categoryId;

  @ProtoField(tag = 4, type = STRING)
  public final String categoryDisplay;

  @ProtoField(tag = 5, type = STRING)
  public final String categorySubtitle;

  @ProtoField(tag = 6, type = STRING, label = REPEATED)
  public final List<String> promotedAssetsNew;

  @ProtoField(tag = 7, type = STRING, label = REPEATED)
  public final List<String> promotedAssetsHome;

  @ProtoField(tag = 8, label = REPEATED)
  public final List<CategoryProto> subCategories;

  @ProtoField(tag = 9, type = STRING, label = REPEATED)
  public final List<String> promotedAssetsPaid;

  @ProtoField(tag = 10, type = STRING, label = REPEATED)
  public final List<String> promotedAssetsFree;

  public CategoryProto(Integer assetType, String categoryId, String categoryDisplay, String categorySubtitle, List<String> promotedAssetsNew, List<String> promotedAssetsHome, List<CategoryProto> subCategories, List<String> promotedAssetsPaid, List<String> promotedAssetsFree) {
    this.assetType = assetType;
    this.categoryId = categoryId;
    this.categoryDisplay = categoryDisplay;
    this.categorySubtitle = categorySubtitle;
    this.promotedAssetsNew = immutableCopyOf(promotedAssetsNew);
    this.promotedAssetsHome = immutableCopyOf(promotedAssetsHome);
    this.subCategories = immutableCopyOf(subCategories);
    this.promotedAssetsPaid = immutableCopyOf(promotedAssetsPaid);
    this.promotedAssetsFree = immutableCopyOf(promotedAssetsFree);
  }

  private CategoryProto(Builder builder) {
    this(builder.assetType, builder.categoryId, builder.categoryDisplay, builder.categorySubtitle, builder.promotedAssetsNew, builder.promotedAssetsHome, builder.subCategories, builder.promotedAssetsPaid, builder.promotedAssetsFree);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CategoryProto)) return false;
    CategoryProto o = (CategoryProto) other;
    return equals(assetType, o.assetType)
        && equals(categoryId, o.categoryId)
        && equals(categoryDisplay, o.categoryDisplay)
        && equals(categorySubtitle, o.categorySubtitle)
        && equals(promotedAssetsNew, o.promotedAssetsNew)
        && equals(promotedAssetsHome, o.promotedAssetsHome)
        && equals(subCategories, o.subCategories)
        && equals(promotedAssetsPaid, o.promotedAssetsPaid)
        && equals(promotedAssetsFree, o.promotedAssetsFree);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = assetType != null ? assetType.hashCode() : 0;
      result = result * 37 + (categoryId != null ? categoryId.hashCode() : 0);
      result = result * 37 + (categoryDisplay != null ? categoryDisplay.hashCode() : 0);
      result = result * 37 + (categorySubtitle != null ? categorySubtitle.hashCode() : 0);
      result = result * 37 + (promotedAssetsNew != null ? promotedAssetsNew.hashCode() : 1);
      result = result * 37 + (promotedAssetsHome != null ? promotedAssetsHome.hashCode() : 1);
      result = result * 37 + (subCategories != null ? subCategories.hashCode() : 1);
      result = result * 37 + (promotedAssetsPaid != null ? promotedAssetsPaid.hashCode() : 1);
      result = result * 37 + (promotedAssetsFree != null ? promotedAssetsFree.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<CategoryProto> {

    public Integer assetType;
    public String categoryId;
    public String categoryDisplay;
    public String categorySubtitle;
    public List<String> promotedAssetsNew;
    public List<String> promotedAssetsHome;
    public List<CategoryProto> subCategories;
    public List<String> promotedAssetsPaid;
    public List<String> promotedAssetsFree;

    public Builder() {
    }

    public Builder(CategoryProto message) {
      super(message);
      if (message == null) return;
      this.assetType = message.assetType;
      this.categoryId = message.categoryId;
      this.categoryDisplay = message.categoryDisplay;
      this.categorySubtitle = message.categorySubtitle;
      this.promotedAssetsNew = copyOf(message.promotedAssetsNew);
      this.promotedAssetsHome = copyOf(message.promotedAssetsHome);
      this.subCategories = copyOf(message.subCategories);
      this.promotedAssetsPaid = copyOf(message.promotedAssetsPaid);
      this.promotedAssetsFree = copyOf(message.promotedAssetsFree);
    }

    public Builder assetType(Integer assetType) {
      this.assetType = assetType;
      return this;
    }

    public Builder categoryId(String categoryId) {
      this.categoryId = categoryId;
      return this;
    }

    public Builder categoryDisplay(String categoryDisplay) {
      this.categoryDisplay = categoryDisplay;
      return this;
    }

    public Builder categorySubtitle(String categorySubtitle) {
      this.categorySubtitle = categorySubtitle;
      return this;
    }

    public Builder promotedAssetsNew(List<String> promotedAssetsNew) {
      this.promotedAssetsNew = checkForNulls(promotedAssetsNew);
      return this;
    }

    public Builder promotedAssetsHome(List<String> promotedAssetsHome) {
      this.promotedAssetsHome = checkForNulls(promotedAssetsHome);
      return this;
    }

    public Builder subCategories(List<CategoryProto> subCategories) {
      this.subCategories = checkForNulls(subCategories);
      return this;
    }

    public Builder promotedAssetsPaid(List<String> promotedAssetsPaid) {
      this.promotedAssetsPaid = checkForNulls(promotedAssetsPaid);
      return this;
    }

    public Builder promotedAssetsFree(List<String> promotedAssetsFree) {
      this.promotedAssetsFree = checkForNulls(promotedAssetsFree);
      return this;
    }

    @Override
    public CategoryProto build() {
      return new CategoryProto(this);
    }
  }
}
