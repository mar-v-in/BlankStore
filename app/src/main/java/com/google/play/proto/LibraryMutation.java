// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Library.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;

public final class LibraryMutation extends Message {

  public static final Integer DEFAULT_OFFERTYPE = 0;
  public static final Long DEFAULT_DOCUMENTHASH = 0L;
  public static final Boolean DEFAULT_DELETED = false;

  @ProtoField(tag = 1)
  public final Docid docid;

  @ProtoField(tag = 2, type = INT32)
  public final Integer offerType;

  @ProtoField(tag = 3, type = INT64)
  public final Long documentHash;

  @ProtoField(tag = 4, type = BOOL)
  public final Boolean deleted;

  @ProtoField(tag = 5)
  public final LibraryAppDetails appDetails;

  @ProtoField(tag = 6)
  public final LibrarySubscriptionDetails subscriptionDetails;

  public LibraryMutation(Docid docid, Integer offerType, Long documentHash, Boolean deleted, LibraryAppDetails appDetails, LibrarySubscriptionDetails subscriptionDetails) {
    this.docid = docid;
    this.offerType = offerType;
    this.documentHash = documentHash;
    this.deleted = deleted;
    this.appDetails = appDetails;
    this.subscriptionDetails = subscriptionDetails;
  }

  private LibraryMutation(Builder builder) {
    this(builder.docid, builder.offerType, builder.documentHash, builder.deleted, builder.appDetails, builder.subscriptionDetails);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof LibraryMutation)) return false;
    LibraryMutation o = (LibraryMutation) other;
    return equals(docid, o.docid)
        && equals(offerType, o.offerType)
        && equals(documentHash, o.documentHash)
        && equals(deleted, o.deleted)
        && equals(appDetails, o.appDetails)
        && equals(subscriptionDetails, o.subscriptionDetails);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = docid != null ? docid.hashCode() : 0;
      result = result * 37 + (offerType != null ? offerType.hashCode() : 0);
      result = result * 37 + (documentHash != null ? documentHash.hashCode() : 0);
      result = result * 37 + (deleted != null ? deleted.hashCode() : 0);
      result = result * 37 + (appDetails != null ? appDetails.hashCode() : 0);
      result = result * 37 + (subscriptionDetails != null ? subscriptionDetails.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<LibraryMutation> {

    public Docid docid;
    public Integer offerType;
    public Long documentHash;
    public Boolean deleted;
    public LibraryAppDetails appDetails;
    public LibrarySubscriptionDetails subscriptionDetails;

    public Builder() {
    }

    public Builder(LibraryMutation message) {
      super(message);
      if (message == null) return;
      this.docid = message.docid;
      this.offerType = message.offerType;
      this.documentHash = message.documentHash;
      this.deleted = message.deleted;
      this.appDetails = message.appDetails;
      this.subscriptionDetails = message.subscriptionDetails;
    }

    public Builder docid(Docid docid) {
      this.docid = docid;
      return this;
    }

    public Builder offerType(Integer offerType) {
      this.offerType = offerType;
      return this;
    }

    public Builder documentHash(Long documentHash) {
      this.documentHash = documentHash;
      return this;
    }

    public Builder deleted(Boolean deleted) {
      this.deleted = deleted;
      return this;
    }

    public Builder appDetails(LibraryAppDetails appDetails) {
      this.appDetails = appDetails;
      return this;
    }

    public Builder subscriptionDetails(LibrarySubscriptionDetails subscriptionDetails) {
      this.subscriptionDetails = subscriptionDetails;
      return this;
    }

    @Override
    public LibraryMutation build() {
      return new LibraryMutation(this);
    }
  }
}
