// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Unsorted.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;

public final class SignedDataProto extends Message {

  public static final String DEFAULT_SIGNEDDATA = "";
  public static final String DEFAULT_SIGNATURE = "";

  @ProtoField(tag = 1, type = STRING)
  public final String signedData;

  @ProtoField(tag = 2, type = STRING)
  public final String signature;

  public SignedDataProto(String signedData, String signature) {
    this.signedData = signedData;
    this.signature = signature;
  }

  private SignedDataProto(Builder builder) {
    this(builder.signedData, builder.signature);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SignedDataProto)) return false;
    SignedDataProto o = (SignedDataProto) other;
    return equals(signedData, o.signedData)
        && equals(signature, o.signature);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = signedData != null ? signedData.hashCode() : 0;
      result = result * 37 + (signature != null ? signature.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SignedDataProto> {

    public String signedData;
    public String signature;

    public Builder() {
    }

    public Builder(SignedDataProto message) {
      super(message);
      if (message == null) return;
      this.signedData = message.signedData;
      this.signature = message.signature;
    }

    public Builder signedData(String signedData) {
      this.signedData = signedData;
      return this;
    }

    public Builder signature(String signature) {
      this.signature = signature;
      return this;
    }

    @Override
    public SignedDataProto build() {
      return new SignedDataProto(this);
    }
  }
}
