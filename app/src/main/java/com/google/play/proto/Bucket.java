// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Documents.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class Bucket extends Message {

  public static final List<DocV1> DEFAULT_DOCUMENT = Collections.emptyList();
  public static final Boolean DEFAULT_MULTICORPUS = false;
  public static final String DEFAULT_TITLE = "";
  public static final String DEFAULT_ICONURL = "";
  public static final String DEFAULT_FULLCONTENTSURL = "";
  public static final Double DEFAULT_RELEVANCE = 0D;
  public static final Long DEFAULT_ESTIMATEDRESULTS = 0L;
  public static final String DEFAULT_ANALYTICSCOOKIE = "";
  public static final String DEFAULT_FULLCONTENTSLISTURL = "";
  public static final String DEFAULT_NEXTPAGEURL = "";
  public static final Boolean DEFAULT_ORDERED = false;

  @ProtoField(tag = 1, label = REPEATED)
  public final List<DocV1> document;

  @ProtoField(tag = 2, type = BOOL)
  public final Boolean multiCorpus;

  @ProtoField(tag = 3, type = STRING)
  public final String title;

  @ProtoField(tag = 4, type = STRING)
  public final String iconUrl;

  @ProtoField(tag = 5, type = STRING)
  public final String fullContentsUrl;

  @ProtoField(tag = 6, type = DOUBLE)
  public final Double relevance;

  @ProtoField(tag = 7, type = INT64)
  public final Long estimatedResults;

  @ProtoField(tag = 8, type = STRING)
  public final String analyticsCookie;

  @ProtoField(tag = 9, type = STRING)
  public final String fullContentsListUrl;

  @ProtoField(tag = 10, type = STRING)
  public final String nextPageUrl;

  @ProtoField(tag = 11, type = BOOL)
  public final Boolean ordered;

  public Bucket(List<DocV1> document, Boolean multiCorpus, String title, String iconUrl, String fullContentsUrl, Double relevance, Long estimatedResults, String analyticsCookie, String fullContentsListUrl, String nextPageUrl, Boolean ordered) {
    this.document = immutableCopyOf(document);
    this.multiCorpus = multiCorpus;
    this.title = title;
    this.iconUrl = iconUrl;
    this.fullContentsUrl = fullContentsUrl;
    this.relevance = relevance;
    this.estimatedResults = estimatedResults;
    this.analyticsCookie = analyticsCookie;
    this.fullContentsListUrl = fullContentsListUrl;
    this.nextPageUrl = nextPageUrl;
    this.ordered = ordered;
  }

  private Bucket(Builder builder) {
    this(builder.document, builder.multiCorpus, builder.title, builder.iconUrl, builder.fullContentsUrl, builder.relevance, builder.estimatedResults, builder.analyticsCookie, builder.fullContentsListUrl, builder.nextPageUrl, builder.ordered);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Bucket)) return false;
    Bucket o = (Bucket) other;
    return equals(document, o.document)
        && equals(multiCorpus, o.multiCorpus)
        && equals(title, o.title)
        && equals(iconUrl, o.iconUrl)
        && equals(fullContentsUrl, o.fullContentsUrl)
        && equals(relevance, o.relevance)
        && equals(estimatedResults, o.estimatedResults)
        && equals(analyticsCookie, o.analyticsCookie)
        && equals(fullContentsListUrl, o.fullContentsListUrl)
        && equals(nextPageUrl, o.nextPageUrl)
        && equals(ordered, o.ordered);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = document != null ? document.hashCode() : 1;
      result = result * 37 + (multiCorpus != null ? multiCorpus.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (iconUrl != null ? iconUrl.hashCode() : 0);
      result = result * 37 + (fullContentsUrl != null ? fullContentsUrl.hashCode() : 0);
      result = result * 37 + (relevance != null ? relevance.hashCode() : 0);
      result = result * 37 + (estimatedResults != null ? estimatedResults.hashCode() : 0);
      result = result * 37 + (analyticsCookie != null ? analyticsCookie.hashCode() : 0);
      result = result * 37 + (fullContentsListUrl != null ? fullContentsListUrl.hashCode() : 0);
      result = result * 37 + (nextPageUrl != null ? nextPageUrl.hashCode() : 0);
      result = result * 37 + (ordered != null ? ordered.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Bucket> {

    public List<DocV1> document;
    public Boolean multiCorpus;
    public String title;
    public String iconUrl;
    public String fullContentsUrl;
    public Double relevance;
    public Long estimatedResults;
    public String analyticsCookie;
    public String fullContentsListUrl;
    public String nextPageUrl;
    public Boolean ordered;

    public Builder() {
    }

    public Builder(Bucket message) {
      super(message);
      if (message == null) return;
      this.document = copyOf(message.document);
      this.multiCorpus = message.multiCorpus;
      this.title = message.title;
      this.iconUrl = message.iconUrl;
      this.fullContentsUrl = message.fullContentsUrl;
      this.relevance = message.relevance;
      this.estimatedResults = message.estimatedResults;
      this.analyticsCookie = message.analyticsCookie;
      this.fullContentsListUrl = message.fullContentsListUrl;
      this.nextPageUrl = message.nextPageUrl;
      this.ordered = message.ordered;
    }

    public Builder document(List<DocV1> document) {
      this.document = checkForNulls(document);
      return this;
    }

    public Builder multiCorpus(Boolean multiCorpus) {
      this.multiCorpus = multiCorpus;
      return this;
    }

    public Builder title(String title) {
      this.title = title;
      return this;
    }

    public Builder iconUrl(String iconUrl) {
      this.iconUrl = iconUrl;
      return this;
    }

    public Builder fullContentsUrl(String fullContentsUrl) {
      this.fullContentsUrl = fullContentsUrl;
      return this;
    }

    public Builder relevance(Double relevance) {
      this.relevance = relevance;
      return this;
    }

    public Builder estimatedResults(Long estimatedResults) {
      this.estimatedResults = estimatedResults;
      return this;
    }

    public Builder analyticsCookie(String analyticsCookie) {
      this.analyticsCookie = analyticsCookie;
      return this;
    }

    public Builder fullContentsListUrl(String fullContentsListUrl) {
      this.fullContentsListUrl = fullContentsListUrl;
      return this;
    }

    public Builder nextPageUrl(String nextPageUrl) {
      this.nextPageUrl = nextPageUrl;
      return this;
    }

    public Builder ordered(Boolean ordered) {
      this.ordered = ordered;
      return this;
    }

    @Override
    public Bucket build() {
      return new Bucket(this);
    }
  }
}
