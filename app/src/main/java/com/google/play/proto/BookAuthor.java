// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Book.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;

public final class BookAuthor extends Message {

  public static final String DEFAULT_NAME = "";
  public static final String DEFAULT_DEPRECATEDQUERY = "";

  @ProtoField(tag = 1, type = STRING)
  public final String name;

  @ProtoField(tag = 2, type = STRING)
  public final String deprecatedQuery;

  @ProtoField(tag = 3)
  public final Docid docid;

  public BookAuthor(String name, String deprecatedQuery, Docid docid) {
    this.name = name;
    this.deprecatedQuery = deprecatedQuery;
    this.docid = docid;
  }

  private BookAuthor(Builder builder) {
    this(builder.name, builder.deprecatedQuery, builder.docid);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BookAuthor)) return false;
    BookAuthor o = (BookAuthor) other;
    return equals(name, o.name)
        && equals(deprecatedQuery, o.deprecatedQuery)
        && equals(docid, o.docid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = name != null ? name.hashCode() : 0;
      result = result * 37 + (deprecatedQuery != null ? deprecatedQuery.hashCode() : 0);
      result = result * 37 + (docid != null ? docid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<BookAuthor> {

    public String name;
    public String deprecatedQuery;
    public Docid docid;

    public Builder() {
    }

    public Builder(BookAuthor message) {
      super(message);
      if (message == null) return;
      this.name = message.name;
      this.deprecatedQuery = message.deprecatedQuery;
      this.docid = message.docid;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder deprecatedQuery(String deprecatedQuery) {
      this.deprecatedQuery = deprecatedQuery;
      return this;
    }

    public Builder docid(Docid docid) {
      this.docid = docid;
      return this;
    }

    @Override
    public BookAuthor build() {
      return new BookAuthor(this);
    }
  }
}
