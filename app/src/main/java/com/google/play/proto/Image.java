// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/BadgeImage.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class Image extends Message {

  public static final Integer DEFAULT_IMAGETYPE = 0;
  public static final String DEFAULT_IMAGEURL = "";
  public static final String DEFAULT_ALTTEXTLOCALIZED = "";
  public static final String DEFAULT_SECUREURL = "";
  public static final Integer DEFAULT_POSITIONINSEQUENCE = 0;
  public static final Boolean DEFAULT_SUPPORTSFIFEURLOPTIONS = false;

  @ProtoField(tag = 1, type = INT32)
  public final Integer imageType;

  @ProtoField(tag = 2)
  public final DimensionProto dimension;

  @ProtoField(tag = 5, type = STRING)
  public final String imageUrl;

  @ProtoField(tag = 6, type = STRING)
  public final String altTextLocalized;

  @ProtoField(tag = 7, type = STRING)
  public final String secureUrl;

  @ProtoField(tag = 8, type = INT32)
  public final Integer positionInSequence;

  @ProtoField(tag = 9, type = BOOL)
  public final Boolean supportsFifeUrlOptions;

  @ProtoField(tag = 10)
  public final CitationProto citation;

  public Image(Integer imageType, DimensionProto dimension, String imageUrl, String altTextLocalized, String secureUrl, Integer positionInSequence, Boolean supportsFifeUrlOptions, CitationProto citation) {
    this.imageType = imageType;
    this.dimension = dimension;
    this.imageUrl = imageUrl;
    this.altTextLocalized = altTextLocalized;
    this.secureUrl = secureUrl;
    this.positionInSequence = positionInSequence;
    this.supportsFifeUrlOptions = supportsFifeUrlOptions;
    this.citation = citation;
  }

  private Image(Builder builder) {
    this(builder.imageType, builder.dimension, builder.imageUrl, builder.altTextLocalized, builder.secureUrl, builder.positionInSequence, builder.supportsFifeUrlOptions, builder.citation);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Image)) return false;
    Image o = (Image) other;
    return equals(imageType, o.imageType)
        && equals(dimension, o.dimension)
        && equals(imageUrl, o.imageUrl)
        && equals(altTextLocalized, o.altTextLocalized)
        && equals(secureUrl, o.secureUrl)
        && equals(positionInSequence, o.positionInSequence)
        && equals(supportsFifeUrlOptions, o.supportsFifeUrlOptions)
        && equals(citation, o.citation);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = imageType != null ? imageType.hashCode() : 0;
      result = result * 37 + (dimension != null ? dimension.hashCode() : 0);
      result = result * 37 + (imageUrl != null ? imageUrl.hashCode() : 0);
      result = result * 37 + (altTextLocalized != null ? altTextLocalized.hashCode() : 0);
      result = result * 37 + (secureUrl != null ? secureUrl.hashCode() : 0);
      result = result * 37 + (positionInSequence != null ? positionInSequence.hashCode() : 0);
      result = result * 37 + (supportsFifeUrlOptions != null ? supportsFifeUrlOptions.hashCode() : 0);
      result = result * 37 + (citation != null ? citation.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Image> {

    public Integer imageType;
    public DimensionProto dimension;
    public String imageUrl;
    public String altTextLocalized;
    public String secureUrl;
    public Integer positionInSequence;
    public Boolean supportsFifeUrlOptions;
    public CitationProto citation;

    public Builder() {
    }

    public Builder(Image message) {
      super(message);
      if (message == null) return;
      this.imageType = message.imageType;
      this.dimension = message.dimension;
      this.imageUrl = message.imageUrl;
      this.altTextLocalized = message.altTextLocalized;
      this.secureUrl = message.secureUrl;
      this.positionInSequence = message.positionInSequence;
      this.supportsFifeUrlOptions = message.supportsFifeUrlOptions;
      this.citation = message.citation;
    }

    public Builder imageType(Integer imageType) {
      this.imageType = imageType;
      return this;
    }

    public Builder dimension(DimensionProto dimension) {
      this.dimension = dimension;
      return this;
    }

    public Builder imageUrl(String imageUrl) {
      this.imageUrl = imageUrl;
      return this;
    }

    public Builder altTextLocalized(String altTextLocalized) {
      this.altTextLocalized = altTextLocalized;
      return this;
    }

    public Builder secureUrl(String secureUrl) {
      this.secureUrl = secureUrl;
      return this;
    }

    public Builder positionInSequence(Integer positionInSequence) {
      this.positionInSequence = positionInSequence;
      return this;
    }

    public Builder supportsFifeUrlOptions(Boolean supportsFifeUrlOptions) {
      this.supportsFifeUrlOptions = supportsFifeUrlOptions;
      return this;
    }

    public Builder citation(CitationProto citation) {
      this.citation = citation;
      return this;
    }

    @Override
    public Image build() {
      return new Image(this);
    }
  }
}
