// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/Offers.proto
package com.google.play.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class Offer extends Message {

  public static final Long DEFAULT_MICROS = 0L;
  public static final String DEFAULT_CURRENCYCODE = "";
  public static final String DEFAULT_FORMATTEDAMOUNT = "";
  public static final List<Offer> DEFAULT_CONVERTEDPRICE = Collections.emptyList();
  public static final Boolean DEFAULT_CHECKOUTFLOWREQUIRED = false;
  public static final Long DEFAULT_FULLPRICEMICROS = 0L;
  public static final String DEFAULT_FORMATTEDFULLAMOUNT = "";
  public static final Integer DEFAULT_OFFERTYPE = 0;
  public static final Long DEFAULT_ONSALEDATE = 0L;
  public static final List<String> DEFAULT_PROMOTIONLABEL = Collections.emptyList();
  public static final String DEFAULT_FORMATTEDNAME = "";
  public static final String DEFAULT_FORMATTEDDESCRIPTION = "";

  @ProtoField(tag = 1, type = INT64)
  public final Long micros;

  @ProtoField(tag = 2, type = STRING)
  public final String currencyCode;

  @ProtoField(tag = 3, type = STRING)
  public final String formattedAmount;

  @ProtoField(tag = 4, label = REPEATED)
  public final List<Offer> convertedPrice;

  @ProtoField(tag = 5, type = BOOL)
  public final Boolean checkoutFlowRequired;

  @ProtoField(tag = 6, type = INT64)
  public final Long fullPriceMicros;

  @ProtoField(tag = 7, type = STRING)
  public final String formattedFullAmount;

  @ProtoField(tag = 8, type = INT32)
  public final Integer offerType;

  @ProtoField(tag = 9)
  public final RentalTerms rentalTerms;

  @ProtoField(tag = 10, type = INT64)
  public final Long onSaleDate;

  @ProtoField(tag = 11, type = STRING, label = REPEATED)
  public final List<String> promotionLabel;

  @ProtoField(tag = 12)
  public final SubscriptionTerms subscriptionTerms;

  @ProtoField(tag = 13, type = STRING)
  public final String formattedName;

  @ProtoField(tag = 14, type = STRING)
  public final String formattedDescription;

  public Offer(Long micros, String currencyCode, String formattedAmount, List<Offer> convertedPrice, Boolean checkoutFlowRequired, Long fullPriceMicros, String formattedFullAmount, Integer offerType, RentalTerms rentalTerms, Long onSaleDate, List<String> promotionLabel, SubscriptionTerms subscriptionTerms, String formattedName, String formattedDescription) {
    this.micros = micros;
    this.currencyCode = currencyCode;
    this.formattedAmount = formattedAmount;
    this.convertedPrice = immutableCopyOf(convertedPrice);
    this.checkoutFlowRequired = checkoutFlowRequired;
    this.fullPriceMicros = fullPriceMicros;
    this.formattedFullAmount = formattedFullAmount;
    this.offerType = offerType;
    this.rentalTerms = rentalTerms;
    this.onSaleDate = onSaleDate;
    this.promotionLabel = immutableCopyOf(promotionLabel);
    this.subscriptionTerms = subscriptionTerms;
    this.formattedName = formattedName;
    this.formattedDescription = formattedDescription;
  }

  private Offer(Builder builder) {
    this(builder.micros, builder.currencyCode, builder.formattedAmount, builder.convertedPrice, builder.checkoutFlowRequired, builder.fullPriceMicros, builder.formattedFullAmount, builder.offerType, builder.rentalTerms, builder.onSaleDate, builder.promotionLabel, builder.subscriptionTerms, builder.formattedName, builder.formattedDescription);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Offer)) return false;
    Offer o = (Offer) other;
    return equals(micros, o.micros)
        && equals(currencyCode, o.currencyCode)
        && equals(formattedAmount, o.formattedAmount)
        && equals(convertedPrice, o.convertedPrice)
        && equals(checkoutFlowRequired, o.checkoutFlowRequired)
        && equals(fullPriceMicros, o.fullPriceMicros)
        && equals(formattedFullAmount, o.formattedFullAmount)
        && equals(offerType, o.offerType)
        && equals(rentalTerms, o.rentalTerms)
        && equals(onSaleDate, o.onSaleDate)
        && equals(promotionLabel, o.promotionLabel)
        && equals(subscriptionTerms, o.subscriptionTerms)
        && equals(formattedName, o.formattedName)
        && equals(formattedDescription, o.formattedDescription);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = micros != null ? micros.hashCode() : 0;
      result = result * 37 + (currencyCode != null ? currencyCode.hashCode() : 0);
      result = result * 37 + (formattedAmount != null ? formattedAmount.hashCode() : 0);
      result = result * 37 + (convertedPrice != null ? convertedPrice.hashCode() : 1);
      result = result * 37 + (checkoutFlowRequired != null ? checkoutFlowRequired.hashCode() : 0);
      result = result * 37 + (fullPriceMicros != null ? fullPriceMicros.hashCode() : 0);
      result = result * 37 + (formattedFullAmount != null ? formattedFullAmount.hashCode() : 0);
      result = result * 37 + (offerType != null ? offerType.hashCode() : 0);
      result = result * 37 + (rentalTerms != null ? rentalTerms.hashCode() : 0);
      result = result * 37 + (onSaleDate != null ? onSaleDate.hashCode() : 0);
      result = result * 37 + (promotionLabel != null ? promotionLabel.hashCode() : 1);
      result = result * 37 + (subscriptionTerms != null ? subscriptionTerms.hashCode() : 0);
      result = result * 37 + (formattedName != null ? formattedName.hashCode() : 0);
      result = result * 37 + (formattedDescription != null ? formattedDescription.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Offer> {

    public Long micros;
    public String currencyCode;
    public String formattedAmount;
    public List<Offer> convertedPrice;
    public Boolean checkoutFlowRequired;
    public Long fullPriceMicros;
    public String formattedFullAmount;
    public Integer offerType;
    public RentalTerms rentalTerms;
    public Long onSaleDate;
    public List<String> promotionLabel;
    public SubscriptionTerms subscriptionTerms;
    public String formattedName;
    public String formattedDescription;

    public Builder() {
    }

    public Builder(Offer message) {
      super(message);
      if (message == null) return;
      this.micros = message.micros;
      this.currencyCode = message.currencyCode;
      this.formattedAmount = message.formattedAmount;
      this.convertedPrice = copyOf(message.convertedPrice);
      this.checkoutFlowRequired = message.checkoutFlowRequired;
      this.fullPriceMicros = message.fullPriceMicros;
      this.formattedFullAmount = message.formattedFullAmount;
      this.offerType = message.offerType;
      this.rentalTerms = message.rentalTerms;
      this.onSaleDate = message.onSaleDate;
      this.promotionLabel = copyOf(message.promotionLabel);
      this.subscriptionTerms = message.subscriptionTerms;
      this.formattedName = message.formattedName;
      this.formattedDescription = message.formattedDescription;
    }

    public Builder micros(Long micros) {
      this.micros = micros;
      return this;
    }

    public Builder currencyCode(String currencyCode) {
      this.currencyCode = currencyCode;
      return this;
    }

    public Builder formattedAmount(String formattedAmount) {
      this.formattedAmount = formattedAmount;
      return this;
    }

    public Builder convertedPrice(List<Offer> convertedPrice) {
      this.convertedPrice = checkForNulls(convertedPrice);
      return this;
    }

    public Builder checkoutFlowRequired(Boolean checkoutFlowRequired) {
      this.checkoutFlowRequired = checkoutFlowRequired;
      return this;
    }

    public Builder fullPriceMicros(Long fullPriceMicros) {
      this.fullPriceMicros = fullPriceMicros;
      return this;
    }

    public Builder formattedFullAmount(String formattedFullAmount) {
      this.formattedFullAmount = formattedFullAmount;
      return this;
    }

    public Builder offerType(Integer offerType) {
      this.offerType = offerType;
      return this;
    }

    public Builder rentalTerms(RentalTerms rentalTerms) {
      this.rentalTerms = rentalTerms;
      return this;
    }

    public Builder onSaleDate(Long onSaleDate) {
      this.onSaleDate = onSaleDate;
      return this;
    }

    public Builder promotionLabel(List<String> promotionLabel) {
      this.promotionLabel = checkForNulls(promotionLabel);
      return this;
    }

    public Builder subscriptionTerms(SubscriptionTerms subscriptionTerms) {
      this.subscriptionTerms = subscriptionTerms;
      return this;
    }

    public Builder formattedName(String formattedName) {
      this.formattedName = formattedName;
      return this;
    }

    public Builder formattedDescription(String formattedDescription) {
      this.formattedDescription = formattedDescription;
      return this;
    }

    @Override
    public Offer build() {
      return new Offer(this);
    }
  }
}
